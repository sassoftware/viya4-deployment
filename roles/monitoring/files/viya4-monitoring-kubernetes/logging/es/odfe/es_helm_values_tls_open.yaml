# Chart: https://github.com/opendistro-for-elasticsearch/opendistro-build/tree/master/helm
# Default values: https://github.com/opendistro-for-elasticsearch/opendistro-build/blob/master/helm/opendistro-es/values.yaml

################################################################################
# Obtains TLS certs via the following secrets:
#
#                         es-transport-tls-secret
#                         es-rest-tls-secret
#                         es-admin-tls-secret
#################################################################################

 elasticsearch:
   config: 
     ######## OpenDistro for Elasticsearch Security Configuration - START ########
     # Based on elasticsearch.yaml file found on pod after deploying with demo security config
     #
     # Changes: renamed various .pem files to use elk- prefix (expected/required by Helm templates)
     #          set:        opendistro_security.authcz.admin_dn
     #          added/set:  opendistro_security.nodes_dn
     #          removed:    various items unrelated to TLS
     #          set:        allow_unsafe_democertificates, allow_default_init_securityindex (both now: false)

     opendistro_security.ssl.transport.pemcert_filepath: elk-transport-crt.pem
     opendistro_security.ssl.transport.pemkey_filepath: elk-transport-key.pem
     opendistro_security.ssl.transport.pemtrustedcas_filepath: elk-transport-root-ca.pem
     opendistro_security.ssl.transport.enforce_hostname_verification: false
     opendistro_security.ssl.http.enabled: true
     opendistro_security.ssl.http.pemcert_filepath: elk-transport-crt.pem
     opendistro_security.ssl.http.pemkey_filepath: elk-transport-key.pem
     opendistro_security.ssl.http.pemtrustedcas_filepath: elk-transport-root-ca.pem
     opendistro_security.allow_unsafe_democertificates: false
     opendistro_security.allow_default_init_securityindex: false
     opendistro_security.authcz.admin_dn:
       - "CN=es-admin,O=cert-manager"
     opendistro_security.nodes_dn:
        - "CN=es-transport,O=cert-manager"

     opendistro_security.audit.type: internal_elasticsearch
     opendistro_security.enable_snapshot_restore_privilege: true
     opendistro_security.check_snapshot_restore_write_privileges: true
     opendistro_security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]
     cluster.routing.allocation.disk.threshold_enabled: false
     node.max_local_storage_nodes: 3
     ######## End OpenDistro for Elasticsearch Security Configuration ########

   ssl:
     transport:
        # TLS is mandatory for transport layer(cannot be disabled)
        existingCertSecret: es-transport-tls-secret
        existingCertSecretCertSubPath: tls.crt
        existingCertSecretKeySubPath: tls.key
        existingCertSecretRootCASubPath: ca.crt
     rest:
        enabled: true
        existingCertSecret: es-rest-tls-secret
        existingCertSecretCertSubPath: tls.crt
        existingCertSecretKeySubPath: tls.key
        existingCertSecretRootCASubPath: ca.crt
     admin:
        enabled: true
        existingCertSecret: es-admin-tls-secret
        existingCertSecretCertSubPath: tls.crt
        existingCertSecretKeySubPath: tls.key
        existingCertSecretRootCASubPath: ca.crt

   securityConfig:
     enabled: true
     path: "/usr/share/elasticsearch/plugins/opendistro_security/securityconfig"
     actionGroupsSecret: security-action-groups
     configSecret: security-config
     internalUsersSecret: security-internal-users
     rolesSecret: security-roles
     rolesMappingSecret: security-roles-mapping

   extraEnvs:
   - name: ES_ADMIN_PASSWD
     valueFrom:
        secretKeyRef:
          name: internal-user-admin
          key: password
   - name: ES_KIBANASERVER_PASSWD
     valueFrom:
        secretKeyRef:
          name: internal-user-kibanaserver
          key: password
   - name: ES_LOGCOLLECTOR_PASSWD
     valueFrom:
        secretKeyRef:
          name: internal-user-logcollector
          key: password
   - name: ES_METRICGETTER_PASSWD
     valueFrom:
        secretKeyRef:
          name: internal-user-metricgetter
          key: password

   extraVolumes:
   - name: v4m-security-script
     configMap:
        name: run-securityadmin.sh
        defaultMode: 0755
   extraVolumeMounts: 
   - mountPath: "/usr/share/elasticsearch/config/run_securityadmin.sh"
     name: v4m-security-script
     readOnly: true
     subPath: run_securityadmin.sh

 kibana:
   elasticsearchAcccount:
     secret: internal-user-kibanaserver
   extraEnvs:
   - name: ELASTICSEARCH_USERNAME
     valueFrom:
        secretKeyRef:
          name: internal-user-kibanaserver
          key: username
   - name: ELASTICSEARCH_PASSWORD
     valueFrom:
        secretKeyRef:
          name: internal-user-kibanaserver
          key: password
