apiVersion: v1
data:
  fluent-bit-filter.conf: |
    [FILTER]
       Name modify
       Match *
       Set  fb_configMap_version 0.1.10
       #Set clusterID NOT_SET
    [FILTER]
       # NOTE: This kubernetes filter _only_ applies to the **METALOGGING** messages
       #       A separate instance of this filter exists for the **LOGGING** messages
       #
       Name                kubernetes
       Match               opsK.*
       Kube_Tag_Prefix     kube.var.log.containers.
       Kube_URL            https://kubernetes.default.svc:443
       Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
       Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
       Merge_Log           On
       Merge_Log_Key       json_log
       K8S-Logging.Parser  On
       K8S-Logging.Exclude On
    [FILTER]
       Name                kubernetes
       Match               kube.*
       Kube_Tag_Prefix     kube.var.log.containers.
       Kube_URL            https://kubernetes.default.svc:443
       Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
       Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
       Merge_Log           On
       Merge_Log_Key       json_log
       K8S-Logging.Parser  On
       K8S-Logging.Exclude On
    [FILTER]
       Name modify
       Match *
       Condition  Key_exists     json_log
       Set        DB__structlog  true
    [FILTER]
       Name           nest
       Match          *
       Operation      lift
       Nested_under   kubernetes
       Add_prefix     k8s_
    [FILTER]
       # Move/Copy any Kubernetes top-level items here
       Name           modify
       Match          *
       Copy           k8s_namespace_name temp_namespace
    [FILTER]
       Name           nest
       Match          *
       Operation      lift
       Nested_under   k8s_annotations
       Add_prefix     annotations_
    [FILTER]
       #
       # Remove any annotations here
       #
       Name           modify
       Match          *
       Remove_regex   annotations_prometheus\.io.+
       Copy           k8s_container_name  logsource
    [FILTER]
       Name           nest
       Match          *
       Operation      nest
       Wildcard       annotations_*
       Nest_under     k8s_annotations
       Remove_prefix  annotations_
    [FILTER]
       Name           nest
       Match          *
       Operation      lift
       Nested_under   k8s_labels
       Add_prefix     labels_
    [FILTER]
       #
       # Make kubernetes label adjustments here
       #
       Alias          set_appname
       Name           modify
       Match          *
       Copy           labels_app  appname
       # following used for ETCD message processing
       Copy           labels_component temp_component
       # following used for Crunchy Data message processing
       Copy           labels_vendor  temp_vendor
       Copy           labels_role    temp_role
       Copy           labels_pgo-pg-database temp_pgo-pg-database
    [FILTER]
       #
       # Use kubernetes.labels.k8s-app for appname
       # if kubernetes.labels.app does not exist
       #
       Alias          set_appname2
       Name           modify
       Match          *
       Condition      Key_does_not_exist labels_app
       Copy           labels_k8s-app  appname
    [FILTER]
       Name           nest
       Match          *
       Operation      nest
       Wildcard       labels_*
       Nest_under     k8s_labels
       Remove_prefix  labels_
    [FILTER]
       #
       # Re-constituting kubernetes map
       #
       Name           nest
       Match          *
       Operation      nest
       Wildcard       k8s_*
       Nest_under     kubernetes
       Remove_prefix  k8s_
    [FILTER]
       Alias           Move_some_props
       Name            modify
       Match           *
       Rename          appname     PROPS__appname
       Rename          stream      PROPS__stream
       Rename          kubernetes  PROPS__kubernetes
    [FILTER]
       Alias           lift_2_JL__
       Name            nest
       Match           *
       Operation       lift
       Nested_under    json_log
       Add_prefix      JL__
    [FILTER]
       Alias           lift_JL_properties
       Name            nest
       Match           *
       Operation       lift
       Nested_under    JL__properties
       Add_prefix      PROPS__
    [FILTER]
       #
       # Move HTTP Request/Response under properties
       #
       Alias          rename_HTTP_response
       Name           modify
       Match          *
       Condition      Key_value_equals  JL__type    response
       #Condition      Key_value_equals  PROPS__appname   kibana
       Rename         JL__res     PROPS__http_response_details
       Rename         JL__req     PROPS__http_request_details
       Remove         JL__type
       Remove         JL__method
       Remove         JL__statusCode
    [FILTER]
       Name           modify
       Match          *
       # structured logging uses "source" for "logsource"
       Hard_rename    JL__source    logsource
    [FILTER]
       Name           modify
       Match          opsK.*
       Remove         JL__@timestamp
       Rename         JL__message message
    #
    # Kubernetes Events Handling - Start
    #
    [FILTER]
       Alias events_lift_event
       Name         nest
       Match        kube.*
       Operation    lift
       Nested_under JL__event
       Add_prefix   EVENT__
    [FILTER]
       Alias events_lift_meta
       Name         nest
       Match        kube.*
       Operation    lift
       Nested_under EVENT__metadata
       Add_prefix   EV_META__
    [FILTER]
       Alias events_lift_source
       Name         nest
       Match        kube.*
       Operation    lift
       Nested_under EVENT__source
       Add_prefix   EV_SOURCE__
    [FILTER]
       Alias events_lift_object
       Name         nest
       Match        kube.*
       Operation    lift
       Nested_under EVENT__involvedObject
       Add_prefix   EV_OBJ__
    [FILTER]
       Alias events_renames
       Name  modify
       Match kube.*
       Condition Key_value_equals  PROPS__appname eventrouter
       set    logsource            KUBE_EVENT
       copy   EVENT_type           level
       rename JL__verb             PROPS__verb
       rename EVENT__lastTimestamp timeStamp
       rename EVENT__type          PROPS__type
       rename EVENT__message       message
       rename EVENT__reason        PROPS__reason
       rename EV_META__namespace   PROPS__namespace
       rename EV_META__name        PROPS__name
       rename EV_SOURCE__component PROPS__source_component
       rename EV_SOURCE__host      PROPS__source_host
       rename EV_OBJ__kind         PROPS__object_type
       rename EV_OBJ__namespace    PROPS__object_namespace
       rename EV_OBJ__name         PROPS__object
    # Re-construct EVENT structures (just in case)
    [FILTER]
       Alias events_nest_object
       Name         nest
       Match        kube.*
       Operation    nest
       Wildcard     EV_OBJ__*
       Nest_under   EVENT__involvedObject
    [FILTER]
       Alias events_nest_meta
       Name         nest
       Match        kube.*
       Operation    nest
       Wildcard     EV_META__*
       Nest_under   EVENT__metadata
    [FILTER]
       Alias events_nest_source
       Name         nest
       Match        kube.*
       Operation    nest
       Wildcard     EV_SOURCE__*
       Nest_under   EVENT__source
    [FILTER]
       Alias events_nest_event
       Name         nest
       Match        kube.*
       Operation    nest
       Wildcard     EVENT__*
       Nest_under   JL__event
    #
    # Kubernetes Events Handling - End
    #
    [FILTER]
       Alias           lift_JL__
       Name            nest
       Match           *
       Operation       nest
       Wildcard        JL__*
       Nest_under      TOP
       Remove_prefix   JL__
    [FILTER]
       #
       # Lift "top"-level items
       #
       Alias           lift_TOP
       Name            nest
       Match           *
       Operation       lift
       Nested_under    TOP
    [FILTER]
       Alias           rename_log2message
       Match           *
       Name            modify
       Condition       Key_does_not_exist   message
       Condition       Key_exists           log
       Rename          log message
    [FILTER]
       Alias           rename_atTimestamp
       Name            modify
       Match           kube.*
       Condition       Key_exists   @timestamp
       Rename          @timestamp orig_timestamp
    [FILTER]
       Alias           flag_consul_msgs
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource sas-consul-server
       Copy            message   consul_message
       Rename          message   unparsed_message
       Add             flagged4parsing consul
    [FILTER]
       Alias           parse_consul_msgs
       Name            parser
       Match           kube.*
       Key_name        consul_message
       Parser          consul
       Parser          consul_telemetry
       Reserve_Data    On
    [FILTER]
       #
       # CRUNCHY DATA HANDLING -- start
       #
       Alias           flag_operator_stderr
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   temp_vendor  crunchydata
       Condition       Key_value_matches  logsource operator|scheduler
       Condition       Key_value_equals   PROPS__stream  stderr
       Copy            message   misc_message
       Rename          message   unparsed_message
       Add             flagged4parsing operatorstderr
    [FILTER]
       Alias           parse_operator_stderr
       Name            parser
       Match           kube.*
       Key_name        misc_message
       Parser          misc-stderr2
       Parser          crunchy_stderr3
       Reserve_Data    On
    [FILTER]
       Alias           post_operator_stderr
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   flagged4parsing operatorstderr
       Rename          caller   PROPS__caller
    [FILTER]
       Alias           flag_collectapi_msgs
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   temp_vendor  crunchydata
       Condition       Key_value_matches  logsource apiserver|collect|backrest|operator|scheduler
       Condition       Key_does_not_exist flagged4parsing
       Copy            message   collectapi_message
       Rename          message   unparsed_message
       Add             flagged4parsing collectapi
    [FILTER]
       Alias           parse_collectapi_msgs
       Name            parser
       Match           kube.*
       Key_name        collectapi_message
       Parser          collectapi
       Parser          collectapiT
       Parser          crunchy_green
       Parser          misc5
       Reserve_Data    On
    [FILTER]
       # MUST come last to ensure "special" cases are handled first
       Alias           flag_crunchy_msgs
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   temp_vendor    crunchydata
       Condition       Key_value_equals   temp_pgo-pg-database  true
       #Condition       Key_value_matches  temp_role      master|replica
       #Condition       Key_value_equals   logsource      database
       #Condition       Key_value_equals   PROPS__stream  stdout
       Copy            message   crunchy_message
       Rename          message   unparsed_message
       Add             flagged4parsing crunchy
    [FILTER]
       Alias           parse_crunchy_msgs
       Name            parser
       Match           kube.*
       Key_name        crunchy_message
       Parser          crunchy_database
       Parser          crunchy_green
       Parser          crunchy_stderr2
       Reserve_Data    On
       #
       # CRUNCHY DATA HANDLING -- end
       #
    [FILTER]
       #
       # etcd
       #
       Alias           flag_etcd_msgs
       Name            modify
       Match           kube.*
       Condition       Key_value_equals  temp_namespace kube-system
       Condition       Key_value_equals  temp_component etcd
       Copy            message   etcd_message
       Rename          message   unparsed_message
       Add             flagged4parsing etcd
    [FILTER]
       Alias           parse_etcd_msgs
       Name            parser
       Match           kube.*
       Key_name        etcd_message
       Parser          etcd
       Reserve_Data    On
    [FILTER]
       #
       # prometheus node-exporter
       #
       Alias           flag_promex_msgs
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource node-exporter
       Copy            message   promex_message
       Rename          message   unparsed_message
       Add             flagged4parsing node_exp
    [FILTER]
       Alias           parse_promex_msgs
       Name            parser
       Match           kube.*
       Key_name        promex_message
       Parser          logfmt
       Reserve_Data    On
    [FILTER]
       Alias           post_node_exporter
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource node-exporter
       Rename          message unparsed_message
       Rename          msg     message
       Rename          err     PROPS__err
       Rename          name    PROPS__name
       Rename          caller  PROPS__caller
       Rename          ts      timestamp
    [FILTER]
       #
       # grafana
       # message format is JSON but not being handled like other JSON
       # this section handles post-parsing logic
       #
       Alias           post_grafana
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource grafana
       Condition       Key_exists lvl
       Add             flagged4parsing grafana
       Rename          message unparsed_message
       Rename          t       timeStamp
       Rename          msg     message
       Rename          lvl     level
       Rename          arg     PROPS__arg
       Rename          branch  PROPS__branch
       Rename          commit  PROPS__commit
       Rename          compiled PROPS__compiled
       Rename          dbtype  PROPS__dbtype
       Rename          error   PROPS__error
       Rename          errors  PROPS__errors
       Rename          file    PROPS__file
       Rename          logger  PROPS__logger
       Rename          pluginPath  PROPS__pluginPath
       Rename          reason  PROPS__reason
       Rename          caller  PROPS__caller
       Rename          type    PROPS__type
       Rename          var     PROPS__var
       Rename          version PROPS__version
       # The following other sub-components of the captured "message" have been seen during testing
       # We may want to keep one or more of these under PROPERTIES
       #Remove          address
       #Remove          method
       #Remove          orgId
       #Remove          path
       #Remove          protocol
       #Remove          referer
       #Remove          remote_addr
       #Remove          retry
       #Remove          size
       #Remove          socket
       #Remove          status
       #Remove          subUrl
       #Remove          time_ms
       #Remove          uname
       #Remove          userId
    [FILTER]
       Alias           flag_rabbit
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource sas-rabbitmq-server
       Condition       Key_value_equals   PROPS__stream  stdout
       # pod label "app=sas-rabbitmq-server"
       # appname eq "sas-rabbitmq-server"
       Copy            message   rabbit_message
       Rename          message   unparsed_message
       Add             flagged4parsing rabbit
    [FILTER]
       Alias           parse_rabbit_msgs
       Name            parser
       Match           kube.*
       Key_name        rabbit_message
       Parser          sas-rabbitmq
       Reserve_Data    On
    [FILTER]
       Alias           flag_rabbitstderr
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource sas-rabbitmq-server
       Condition       Key_value_equals   PROPS__stream  stderr
       # pod label "app=sas-rabbitmq-server"
       # appname eq "sas-rabbitmq-server"
       Copy            message   rbstderr_message
       Rename          message   unparsed_message
       Add             flagged4parsing rabbitstderr
    [FILTER]
       Alias           parse_rabbitstderr
       Name            parser
       Match           kube.*
       Key_name        rbstderr_message
       Parser          sas-rabbitmq-stderr
       Reserve_Data    On
    [FILTER]
       Alias           flag_discovery
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource discovery
       # appname eq pilot?
       Copy            message   discovery_message
       Rename          message   unparsed_message
       Add             flagged4parsing discovery
    [FILTER]
       Alias           parse_discovery_msgs
       Name            parser
       Match           kube.*
       Key_name        discovery_message
       Parser          istioPilot
       Reserve_Data    On
    [FILTER]
       Alias           flag_mixer
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource mixer
       # If we need/want to handle each sub-type separately...
       # Condition       Key_value_equals   appname policy
       # Condition       Key_value_equals   appname telemetry
       Copy            message   mixer_message
       Rename          message   unparsed_message
       Add             flagged4parsing mixer
    [FILTER]
       Alias           parse_mixer_msgs2
       Name            parser
       Match           XXXX*XXXX
       Key_name        mixer_message
       Parser          mixer
       Reserve_Data    On
    [FILTER]
       Alias           flag_k8sdash
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource dashboard-metrics-scraper
       Condition       Key_value_equals   PROPS__stream  stdout
       Copy            message   k8dash_message
       Rename          message   unparsed_message
       Add             flagged4parsing k8sdash
    [FILTER]
       Alias           parse_k8sdash_msgs
       Name            parser
       Match           kube.*
       Key_name        k8dash_message
       Parser          k8sdash
       Reserve_Data    On
    [FILTER]
       Alias           post_k8sdash
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource dashboard-metrics-scraper
       Rename          ip_address   PROPS__ip_address
       Add             flagged4parsing post_k8sdash
    [FILTER]
       Alias           k8sdash_stderr
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource dashboard-metrics-scraper
       Condition       Key_value_equals   PROPS__stream  stderr
       Hard_rename     msg message
    [FILTER]
       #
       # ingress-nginx -TO DO
       # somethings appears to have changed w/o our noticing
       # Disabling FLAG/PARSE steps since those are new...retaining the annotation.
       #
       Alias           flag_nginx_msgs
       Name            modify
       Match           XXXkube.*
       Condition       Key_value_matches  temp_app_kubernetes_name .*nginx.*
       Copy            message   nginx_message
       Rename          message   unparsed_message
       Add             flagged4parsing nginx
    [FILTER]
       Alias           parse_nginx_msgs
       Name            parser
       Match           XXXkube.*
       Key_name        nginx_message
       Parser          nginx-ingress
       Reserve_Data    On
    [FILTER]
       Alias           post_nginx
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource nginx-ingress-controller
       Condition       Key_value_equals   PROPS__stream  stdout
       Add             level DEBUG
       # Currently removing the following sub-components of the captured "message"
       # We may want to restructure these items into  HTTP_RESPONSE and HTTP_REQUEST maps under PROPERTIES
       Remove          remote_host
       Remove          request
       Remove          status
       Remove          url
       Remove          user
       Remove          method
    [FILTER]
       # NGINX STDERR messages are
       # NOT parsed via annotated parser
       # must be handled separately
       Alias           flag_nginx_stderr
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   logsource      nginx-ingress-controller
       Condition       Key_value_equals   PROPS__stream  stderr
       Copy            message   nginx_stderr_message
       Rename          message   unparsed_message
       Add             flagged4parsing    nginx_stderr
    [FILTER]
       Alias           parse_nginx_stderr_msgs
       Name            parser
       Match           kube.*
       Key_name        nginx_stderr_message
       Parser          nginx-ingress-stderr1
       Parser          misc-stderr2
       Reserve_Data    On
    [FILTER]
       #
       # Try some misc. parsers for unparsed messages (stderr)
       #
       Alias           flag_misc
       Name            modify
       Match           kube.*
       Condition       Key_does_not_exist log
       Condition       Key_does_not_exist flagged4parsing
       Copy            message   misc2_message
       Rename          message   unparsed_message
       Add             flagged4parsing misc
    [FILTER]
       Alias           parse_misc
       Name            parser
       Match           kube.*
       Key_name        misc2_message
       Parser          misc-stderr2
       Parser          misc2
       Parser          misc3
       Parser          misc5
       Parser          misc6
       Parser          misc7
       Parser          gopanic
       Reserve_Data    On
    [FILTER]
       Alias           post_misc
       Name            modify
       Match           kube.*
       Condition       Key_value_equals   flagged4parsing misc
       Rename          caller   PROPS__caller
    [FILTER]
       #
       # Use unparsed_msg if need be
       #
       Alias          use_unparsed
       Name           modify
       Match          kube.*
       Condition      Key_does_not_exist   message
       Rename         unparsed_message     message
       Set            unparsable           true
       Remove_regex   .+_message
    [FILTER]
       #
       # Create 'properties' map
       # ..any PROPS_ objects are included
       #
       Alias           nest_PROPS_under_properties
       Name            nest
       Match           *
       Operation       nest
       Wildcard        PROPS__*
       Nest_under      properties
       Remove_prefix   PROPS__
    [FILTER]
       # "Standardize" Level: DEBUG (includes 'HINT')
       Alias          fix_level_debug
       Name           modify
       Match          *
       Condition      Key_value_matches level (?i:DEBUG)|(?:\AD\z)|(?i:hint)
       Set            level DEBUG
       Set            __temp_level_fixed   Y
    [FILTER]
       # "Standardize" Level: ERROR
       Alias          fix_level_err
       Name           modify
       Match          *
       Condition      Key_value_does_not_match __temp_level_fixed Y
       Condition      Key_value_matches level (?i:err*)|(?:\AE\z)|(?:eror)
       Set            level ERROR
       Set            __temp_level_fixed   Y
    [FILTER]
       # "Standardize" Level: FATAL (includes "C"=critical)
       Alias          fix_level_fatal
       Name           modify
       Match          *
       Condition      Key_value_does_not_match __temp_level_fixed Y
       Condition      Key_value_matches level (?i:fatal*)|(?i:crit*)|(?:\AC\z)
       Set            level FATAL
       Set            __temp_level_fixed   Y
    [FILTER]
       # "Standardize" Level: INFO (includes 'NOTE','LOG')
       Alias          fix_level_info
       Name           modify
       Match          *
       Condition      Key_value_does_not_match __temp_level_fixed Y
       Condition      Key_value_matches level (?i:info*)|(?i:note*)|(?i:log*)|(?:\AI\z)
       Set            level INFO
       Set            __temp_level_fixed   Y
    [FILTER]
       # "Standardize" Level: PANIC
       Alias          fix_level_panic
       Name           modify
       Match          *
       Condition      Key_value_does_not_match __temp_level_fixed Y
       Condition      Key_value_matches level (?i:panic)
       Set            level PANIC
       Set            __temp_level_fixed   Y
    [FILTER]
       # "Standardize" Level: TRACE
       Alias          fix_level_trace
       Name           modify
       Match          *
       Condition      Key_value_does_not_match __temp_level_fixed Y
       Condition      Key_value_matches level (?i:trace)|(?:\AT\t)
       Set            level TRACE
       Set            __temp_level_fixed   Y
    [FILTER]
       # "Standardize" Level: WARN
       Alias          fix_level_warn
       Name           modify
       Match          *
       Condition      Key_value_does_not_match __temp_level_fixed Y
       Condition      Key_value_matches level (?i:warn*)|(?:\AW\z)
       Set            level WARNING
       Set            __temp_level_fixed   Y
    [FILTER]
       # "Standardize" Level: None
       Alias          fix_level_none
       Name           modify
       Match          *
       Condition      Key_does_not_exist level
       Set            level NONE
       Set            __temp_level_fixed   Y
    [FILTER]
       Alias           fix_levels_other
       Name            modify
       Match           *
       Condition       Key_does_not_exist  __temp_level_fixed
       # Move orig_msg_level to PROPERTIES?
       Rename          level  orig_msg_level
       Set             level  INFO
    [FILTER]
       #
       # rename internal vars to move them under DEBUG
       #
       Alias          rename_debug_vars
       Name           modify
       Match          *
       Rename         unparsed_message      DB__unparsed_message
       Rename         unparsable            DB__unparsable
       Rename         flagged4parsing       DB__flagged4parsing
       Rename         fb_configMap_version  DB__fb_configMap_version
       Rename         log                   DB__log
       Rename         orig_msg_level        DB__orig_msg_level
    [FILTER]
       #
       # Move internal vars to DEBUG
       #
       Alias          move_debug_vars
       Name           nest
       Match          kube.*
       Operation      nest
       Wildcard       DB__*
       Nest_under     debug
       Remove_prefix  DB__
    [FILTER]
       #
       # Remove all "temp" vars here
       #
       Alias          remove_temp_vars
       Name           modify
       Match          *
       # comment out the following line to
       # pass internal debugging variables
       # to Elasticsearch
       # Remove         debug
       Remove         time
       Remove_regex   __temp_.+
    [FILTER]
       #
       # WHITELIST Vars to output
       #
       Alias          whitelist
       Name           record_modifier
       Match          *
       Whitelist_key  @timestamp
       Whitelist_key  debug
       Whitelist_key  level
       Whitelist_key  logsource
       Whitelist_key  message
       Whitelist_key  messageKey
       Whitelist_key  messageParameters
       Whitelist_key  properties
  fluent-bit-input.conf: |
    [INPUT]
       Name             tail
       Path             /var/log/containers/*.log
       Exclude_Path     /var/log/containers/v4m-*.log,/var/log/containers/es-exporter-elasticsearch*.log,/var/log/containers/rmq-exporter*.log
       Parser           docker
       Tag              kube.*
       Refresh_Interval    5
       Mem_Buf_Limit    5MB
       Skip_Long_Lines  On
       Ignore_Older     1d
       DB               /var/log/sas_viya_flb.db
    [INPUT]
       # NOTE: ** METALOGGING **
       Name             tail
       Path             /var/log/containers/v4m-*.log
       Parser           docker
       Tag              opsK.*
       Refresh_Interval    5
       Mem_Buf_Limit    5MB
       Skip_Long_Lines  On
       Ignore_Older     1d
       DB               /var/log/sas_viya_flb.db
    [INPUT]
       # NOTE: ** METALOGGING **
       Name             tail
       Path             /var/log/containers/fb-fluent-bit-*.log
       Parser           docker
       Tag              opsK.*
       Refresh_Interval    5
       Mem_Buf_Limit    5MB
       Skip_Long_Lines  On
       Ignore_Older     1d
       DB               /var/log/sas_viya_flb.db
  fluent-bit-output.conf: |
    [OUTPUT]
       Name  es
       Alias eslogs
       Match kube.*
       Host  v4m-es-client-service
       Port  9200
       Buffer_Size 512KB
       Logstash_Format On
       Retry_Limit 5
       Type  _doc
       Time_Key @timestamp
       Replace_Dots On
       Logstash_Prefix kubernetes_cluster
       HTTP_User ${ES_LOGCOLLECTOR_USER}
       HTTP_Passwd ${ES_LOGCOLLECTOR_PASSWD}
       tls         on
       tls.debug   2
       tls.verify  off
    [OUTPUT]
       #
       # NOTE: This ES OUTPUT filter _only_ applies to the **METALOGGING** messages
       #       A separate instance of this filter exists for the **LOGGING** messages
       #
       Name  es
       Alias esmeta
       Match opsK.*
       #Host  elasticsearch-master
       Host  v4m-es-client-service
       Port  9200
       Buffer_Size 512KB
       Logstash_Format On
       Retry_Limit 5
       Type  _doc
       Time_Key @timestamp
       Replace_Dots On
       Logstash_Prefix viya_ops
       HTTP_User ${ES_LOGCOLLECTOR_USER}
       HTTP_Passwd ${ES_LOGCOLLECTOR_PASSWD}
       tls         on
       tls.debug   2
       tls.verify  off
  fluent-bit-service.conf: |
    [SERVICE]
        Flush        1
        Daemon       Off
        Log_Level    info
        Parsers_File parsers.conf
        Parsers_File viya-parsers.conf
        HTTP_Server  On
        HTTP_Listen  0.0.0.0
        HTTP_Port    2020
  fluent-bit.conf: |
    @INCLUDE fluent-bit-service.conf
    @INCLUDE fluent-bit-input.conf
    @INCLUDE fluent-bit-filter.conf
    @INCLUDE fluent-bit-output.conf
  parsers.conf: ""
kind: ConfigMap
metadata:
  labels:
    app: fluent-bit
  name: fb-fluent-bit-config
