# Copyright Â© 2020-2023, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
- name: cluster-monitoring - create userdir
  file:
    path: "{{ tmpdir.path }}/monitoring/"
    state: directory
    mode: "0770"
  tags:
    - install
    - uninstall
    - update

- name: v4m - cluster monitoring config vars
  include_tasks: cluster-monitoring.yaml
  when:
    - V4M_CUSTOM_CONFIG_USER_DIR is none
  tags:
    - install
    - uninstall
    - update

- name: v4m - cluster monitoring custom config user dir
  include_tasks: cluster-monitoring-custom-config.yaml
  when:
    - V4M_CUSTOM_CONFIG_USER_DIR is not none
  tags:
    - install
    - update

- name: cluster-monitoring - grafana cert
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "grafana-ingress-tls-secret"
        namespace: "{{ V4M_MONITORING_NAMESPACE }}"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_GRAFANA_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_GRAFANA_KEY ) |b64encode }}
      type: kubernetes.io/tls
  when:
    - V4M_GRAFANA_CERT is not none
    - V4M_GRAFANA_KEY is not none
  tags:
    - install
    - update

- name: cluster-monitoring - prometheus cert
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "prometheus-ingress-tls-secret"
        namespace: "{{ V4M_MONITORING_NAMESPACE }}"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_PROMETHEUS_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_PROMETHEUS_KEY ) |b64encode }}
      type: kubernetes.io/tls
  when:
    - V4M_PROMETHEUS_CERT is not none
    - V4M_PROMETHEUS_KEY is not none
  tags:
    - install
    - update

- name: cluster-monitoring - alertmanager cert
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "alertmanager-ingress-tls-secret"
        namespace: "{{ V4M_MONITORING_NAMESPACE }}"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_ALERTMANAGER_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_ALERTMANAGER_KEY ) |b64encode }}
      type: kubernetes.io/tls
  when:
    - V4M_ALERTMANAGER_CERT is not none
    - V4M_ALERTMANAGER_KEY is not none
  tags:
    - install
    - update

- name: cluster-monitoring - uninstall
  command:
    cmd: "{{ tmpdir.path }}/viya4-monitoring-kubernetes/monitoring/bin/remove_monitoring_cluster.sh"
  environment: "{{ monitoring_env }}"
  tags:
    - uninstall

- name: cluster-monitoring - delete namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ V4M_MONITORING_NAMESPACE }}"
    wait: true
    wait_timeout: 600
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  tags:
    - uninstall
