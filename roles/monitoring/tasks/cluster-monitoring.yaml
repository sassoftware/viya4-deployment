---
- name: cluster-monitoring - create userdir
  file:
    path: "{{ tmpdir.path }}/monitoring/"
    state: directory
  tags:
    - install
    - uninstall
    - upgrade

- name: cluster-monitoring - lookup creds
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Secret
    name: v4m-grafana
    namespace: monitoring
    kubeconfig: "{{ KUBECONFIG }}"
  register: monitoring_creds
  tags:
    - install
    - upgrade
    - uninstall

- set_fact:
    V4M_GRAFANA_PASSWORD: "{{monitoring_creds.resources[0].data['admin-password']|b64decode}}"
  tags:
    - install
    - upgrade
    - uninstall
  when:
    - (monitoring_creds.resources | length) == 1

- name: cluster-monitoring - generate grafana password
  set_fact:
    V4M_GRAFANA_PASSWORD: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
  tags:
    - install
  when:
    - V4M_GRAFANA_PASSWORD is none

- name: cluster-monitoring - credentials
  debug:
    msg: 
      - "Grafana username: admin" 
      - "Grafana password: {{ V4M_GRAFANA_PASSWORD }}"
  tags:
    - install

- name: cluster-monitoring - user values
  template:
    src: "user-values-prom-operator.yaml"
    dest: "{{ tmpdir.path }}/monitoring/user-values-prom-operator.yaml"
  tags:
    - install
    - update
    - uninstall

- name: cluster-monitoring - deploy
  shell:
    cmd: "{{ tmpdir.path }}/viya4-monitoring-kubernetes/monitoring/bin/deploy_monitoring_cluster.sh"
  environment:
    USER_DIR: "{{ tmpdir.path }}"
    TLS_ENABLE: "true"
    KUBECONFIG: "{{ KUBECONFIG }}"
    LOG_COLOR_ENABLE: false
    NODE_PLACEMENT_ENABLE: "{{ V4M_NODE_PLACEMENT_ENABLE }}"
    GRAFANA_ADMIN_PASSWORD: "{{ V4M_GRAFANA_PASSWORD }}"
  tags:
    - install
    - update

- name: cluster-monitoring - grafana cert
  community.kubernetes.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "grafana-ingress-tls-secret"
        namespace: "monitoring"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_GRAFANA_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_GRAFANA_KEY ) |b64encode }}
      type: kubernetes.io/tls
  when: 
    - V4M_GRAFANA_CERT is not none
    - V4M_GRAFANA_KEY is not none
  tags:
    - install
    - update

- name: cluster-monitoring - prometheus cert
  community.kubernetes.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "prometheus-ingress-tls-secret"
        namespace: "monitoring"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_PROMETHEUS_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_PROMETHEUS_KEY ) |b64encode }}
      type: kubernetes.io/tls
  when: 
    - V4M_PROMETHEUS_CERT is not none
    - V4M_PROMETHEUS_KEY is not none
  tags:
    - install
    - update

- name: cluster-monitoring - alertmanager cert
  community.kubernetes.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "alertmanager-ingress-tls-secret"
        namespace: "monitoring"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_ALERTMANAGER_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_ALERTMANAGER_CERT ) |b64encode }}
      type: kubernetes.io/tls
  when: 
    - V4M_ALERTMANAGER_CERT is not none
    - V4M_ALERTMANAGER_KEY is not none
  tags:
    - install
    - update

- name: cluster-monitoring - uninstall
  shell:
    cmd: "{{ tmpdir.path }}/viya4-monitoring-kubernetes/monitoring/bin/remove_monitoring_cluster.sh"
  environment:
    USER_DIR: "{{ tmpdir.path }}"
    TLS_ENABLE: "true"
    KUBECONFIG: "{{ KUBECONFIG }}"
    LOG_COLOR_ENABLE: false
  tags:
    - uninstall
