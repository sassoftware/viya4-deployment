# Copyright Â© 2020-2024, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
- name: cluster-logging - create userdir # noqa: name[casing]
  file:
    path: "{{ tmpdir.path }}/logging/"
    state: directory
    mode: "0770"
  tags:
    - install
    - uninstall
    - update

- name: V4M - cluster logging config vars
  include_tasks: cluster-logging.yaml
  when:
    - V4M_CUSTOM_CONFIG_USER_DIR is none
  tags:
    - install
    - uninstall
    - update

- name: V4M - cluster logging custom config user dir
  include_tasks: cluster-logging-custom-config.yaml
  when:
    - V4M_CUSTOM_CONFIG_USER_DIR is not none
  tags:
    - install
    - update

- name: cluster-logging - elasticsearch cert # noqa: name[casing]
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: elasticsearch-ingress-tls-secret
        namespace: "{{ V4M_LOGGING_NAMESPACE }}"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_ELASTICSEARCH_CERT) | b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_ELASTICSEARCH_KEY) | b64encode }}
      type: kubernetes.io/tls
  when:
    - V4M_ELASTICSEARCH_CERT is not none
    - V4M_ELASTICSEARCH_KEY is not none
  tags:
    - install
    - update

- name: cluster-logging - kibana cert # noqa: name[casing]
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: kibana-ingress-tls-secret
        namespace: "{{ V4M_LOGGING_NAMESPACE }}"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_KIBANA_CERT) | b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_KIBANA_KEY) | b64encode }}
      type: kubernetes.io/tls
  when:
    - V4M_KIBANA_CERT is not none
    - V4M_KIBANA_KEY is not none
  tags:
    - install
    - update

- name: cluster-logging - uninstall # noqa: name[casing]
  command:
    cmd: "{{ tmpdir.path }}/viya4-monitoring-kubernetes/logging/bin/remove_logging.sh"
  environment: "{{ logging_map['env'] }}"
  tags:
    - uninstall

- name: cluster-logging - delete namespace # noqa: name[casing]
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ V4M_LOGGING_NAMESPACE }}"
    wait: true
    wait_timeout: 600
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  tags:
    - uninstall
