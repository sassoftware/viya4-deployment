---
- name: cluster-logging - create userdir
  file:
    path: "{{ tmpdir.path }}/logging/"
    state: directory
  tags:
    - install
    - uninstall
    - upgrade

- name: cluster-logging - generate kibana password
  set_fact:
    V4M_KIBANA_PASSWORD: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
  tags:
    - install
  when:
    - V4M_KIBANA_PASSWORD is none

- name: cluster-logging - credentials
  debug:
    msg: "Kibana password: {{ V4M_KIBANA_PASSWORD }}"
  tags:
    - install

- name: cluster-logging - user values
  template:
    src: "user-values-elasticsearch-open.yaml"
    dest: "{{ tmpdir.path }}/logging/user-values-elasticsearch-open.yaml"
  tags:
    - install
    - update
    - uninstall

- name: cluster-logging - deploy
  shell:
    cmd: "{{ tmpdir.path }}/viya4-monitoring-kubernetes/logging/bin/deploy_logging_open.sh"
  environment:
    USER_DIR: "{{ tmpdir.path }}"
    TLS_ENABLE: "true"
    KUBECONFIG: "{{ KUBECONFIG }}"
    LOG_COLOR_ENABLE: false
    NODE_PLACEMENT_ENABLE: "{{ V4M_NODE_PLACEMENT_ENABLE }}"
    ES_ADMIN_PASSWD: "{{ V4M_KIBANA_PASSWORD }}"
  ignore_errors: yes
  tags:
    - install
    - update

- name: cluster-monitoring - elasticsearch cert
  community.kubernetes.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "elasticsearch-ingress-tls-secret"
        namespace: "logging"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_ELASTICSEARCH_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_ELASTICSEARCH_KEY ) |b64encode }}
      type: kubernetes.io/tls
  when: 
    - V4M_ELASTICSEARCH_CERT is not none
    - V4M_ELASTICSEARCH_KEY is not none
  tags:
    - install
    - update

- name: cluster-monitoring - kibana cert
  community.kubernetes.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "kibana-ingress-tls-secret"
        namespace: "logging"
      data:
        tls.crt: >-
          {{ lookup('file', V4M_KIBANA_CERT ) |b64encode }}
        tls.key: >-
          {{ lookup('file', V4M_KIBANA_KEY ) |b64encode }}
      type: kubernetes.io/tls
  when: 
    - V4M_KIBANA_CERT is not none
    - V4M_KIBANA_KEY is not none
  tags:
    - install
    - update

- name: cluster-logging - uninstall
  shell:
    cmd: "{{ tmpdir.path }}/viya4-monitoring-kubernetes/logging/bin/remove_logging_open.sh"
  environment:
    USER_DIR: "{{ tmpdir.path }}"
    TLS_ENABLE: "true"
    KUBECONFIG: "{{ KUBECONFIG }}"
    LOG_COLOR_ENABLE: false
  tags:
    - uninstall
