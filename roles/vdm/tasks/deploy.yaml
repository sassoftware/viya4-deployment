---

- name: Create namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - install
    - update

- name: prereqs - cluster-api
  shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-api" -f {{ DEPLOY_DIR }}/site.yaml
    kubectl --kubeconfig {{ KUBECONFIG }} wait --for condition=established --timeout=60s -l "sas.com/admin=cluster-api" crd
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - result["stderr"] is not regex(".* no matches for kind .* in version .*")
    - result["stderr"] is not regex(".*Warning.*")
    - result["stderr"] is not regex(".*error: no matching resources found.*")
  tags:
    - install
    - update

- name: prereqs - cluster-wide
  shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-wide" -f {{ DEPLOY_DIR }}/site.yaml
    kubectl --kubeconfig {{ KUBECONFIG }} wait --for condition=established --timeout=60s -l "sas.com/admin=cluster-wide" crd
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - result["stderr"] is not regex(".* no matches for kind .* in version .*")
    - result["stderr"] is not regex(".*Warning.*")
    - result["stderr"] is not regex(".*error: no matching resources found.*")
  tags:
    - install
    - update

- name: prereqs - cluster-local deploy
  command: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-local" -f {{ DEPLOY_DIR }}/site.yaml --prune
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - result["stderr"] is not regex(".* no matches for kind .* in version .*")  
    - result["stderr"] is not regex(".*Warning.*")
  tags:
    - install
    - update

- name: manifest - deploy
  command: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=namespace" -f {{ DEPLOY_DIR }}/site.yaml --prune
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - result["stderr"] is not regex(".* no matches for kind .* in version .*")  
    - result["stderr"] is not regex(".*Warning.*")
  tags:
    - install
    - update

- name: manifest - deploy update
  command: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=namespace" -f {{ DEPLOY_DIR }}/site.yaml --prune --prune-whitelist=autoscaling/v2beta2/HorizontalPodAutoscaler
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - result["stderr"] is not regex(".* no matches for kind .* in version .*")  
    - result["stderr"] is not regex(".*Warning.*")
  tags:
    - install
    - update

- name: Remove Viya
  community.kubernetes.k8s:
    state: absent
    src:  "{{ DEPLOY_DIR }}/site.yaml"
    wait: false
    kubeconfig: "{{ KUBECONFIG }}"
  register: result
  ignore_errors: yes
  tags:
    - uninstall

- name: Delete namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  tags:
    - uninstall
