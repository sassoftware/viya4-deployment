---
- name: deploy - Create namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - install
    - update

- name: deploy - Apply SAS Viya deployment
  community.kubernetes.k8s:
    src: "{{ DEPLOY_DIR }}/SASDeployment.yaml"
    state: present
    namespace: "{{ NAMESPACE }}"
    kubeconfig: "{{ KUBECONFIG }}"
  when:
    - DEPLOYMENT_OPERATOR_ENABLED
  tags:
    - install
    - update

- name: deploy - Apply SAS Viya deployment
  block:
    - name: deploy - Gather all resource files
      find:
        paths: "{{ ORCHESTRATION_TOOLING_INSTALL_MANIFESTS_DIRECTORY }}"
        patterns: "*.yaml"
      register: manifests
    - name: deploy - Gather SAS Viya deployment resource files
      find:
        paths: "{{ ORCHESTRATION_TOOLING_INSTALL_MANIFESTS_DIRECTORY }}"
        patterns: "*.yaml"
        contains: "^kind: SASDeployment"
      register: deployment_manifests
      failed_when:
        - ( deployment_manifests.files | length ) != 1
    - name: deploy - Apply supporting resources
      community.kubernetes.k8s:
        src: "{{ item.path }}"
        state: present
        namespace: "{{ NAMESPACE }}"
        kubeconfig: "{{ KUBECONFIG }}"
      with_items:
        - "{{ manifests.files | difference(deployment_manifests.files) }}"
    - name: deploy - Deploy SAS Viya
      environment:
        PATH: "{{ ORCHESTRATION_TOOLING_PATH }}"
        KUBECONFIG: "{{ KUBECONFIG }}"
      command: |
        orchestration deploy
             --namespace "{{ NAMESPACE }}"
             --sas-deployment-cr "{{ item.path | replace(ORCHESTRATION_TOOLING_DIRECTORY, '/') }}"
      args:
        chdir: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}"
      with_items:
        - "{{ deployment_manifests.files }}"
  when:
    - DEPLOYMENT_OPERATOR_ENABLED == False
  tags:
    - install
    - update

- name: deploy - Remove Viya
  community.kubernetes.k8s:
    state: absent
    src:  "{{ ORCHESTRATION_TOOLING_UNINSTALL_MANIFEST }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
  ignore_errors: yes
  tags:
    - uninstall

- name: deploy - Delete namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    wait_timeout: 600
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  tags:
    - uninstall
