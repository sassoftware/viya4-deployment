---

- name: Create namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - install
    - upgrade

- name: prereqs - cluster-wide
  shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-wide" -f {{ DEPLOY_DIR }}/site.yaml
    kubectl --kubeconfig {{ KUBECONFIG }} wait --for condition=established --timeout=60s -l "sas.com/admin=cluster-wide" crd
  tags:
    - install
    - upgrade

- name: prereqs - cluster-local deploy
  shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-local" -f {{ DEPLOY_DIR }}/site.yaml --prune
  register: prereq_cluster_local
  failed_when:
    - prereq_cluster_local["stderr"]|length > 0
    - prereq_cluster_local["stderr"] is not regex(".* no matches for kind .* in version .*")
  tags:
    - install
    - upgrade

- name: manifest - deploy
  shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=namespace" -f {{ DEPLOY_DIR }}/site.yaml --prune
  register: manifest_deploy
  failed_when:
    - manifest_deploy["stderr"]|length > 0
    - manifest_deploy["stderr"] is not regex(".* no matches for kind .* in version .*")  
  tags:
    - install
    - upgrade

- name: manifest - deploy istio
  shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=namespace" --prune --prune-whitelist=networking.istio.io/v1alpha3/DestinationRule --prune-whitelist=networking.istio.io/v1alpha3/VirtualService -f {{ DEPLOY_DIR }}/site.yaml
  register: manifest_deploy_istio
  when: 
    - V4_CFG_INGRESS_TYPE == "istio"
  failed_when:
    - manifest_deploy_istio["stderr"]|length > 0
    - manifest_deploy_istio["stderr"] is not regex(".* no matches for kind .* in version .*") 
  tags:
    - install
    - upgrade

- name: Remove Viya
  community.kubernetes.k8s:
    state: absent
    src:  "{{ DEPLOY_DIR }}/site.yaml"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - uninstall

- name: Delete namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  tags:
    - uninstall
