# Copyright Â© 2020-2024, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

# These tasks are responsible for generating the SASDeployment Custom Resource

---
- name: sasdeployment custom resource - Set orchestration tooling facts # noqa: name[casing]
  set_fact:
    ORCHESTRATION_TOOLING_DIRECTORY: "{{ tmpdir.path }}/orchestration"
    ORCHESTRATION_TOOLING_INSTALL_MANIFEST: "{{ DEPLOY_DIR }}/sasdeployment.yaml"
    ORCHESTRATION_TOOLING_INSTALL_MANIFESTS_DIRECTORY: "{{ tmpdir.path }}/orchestration/manifests"
    ORCHESTRATION_TOOLING_UNINSTALL_MANIFEST: "{{ DEPLOY_DIR }}/uninstall.yaml"
  tags:
    - install
    - uninstall
    - update
    - cas-onboard
    - offboard

- name: sasdeployment custom resource - Find order cadence release # noqa: name[casing]
  tags:
    - install
    - uninstall
    - update
    - cas-onboard
    - offboard
  block:
    - name: sasdeployment custom resource - Find order cadence release from cadence.yaml # noqa: name[casing]
      set_fact:
        V4_CFG_CADENCE_RELEASE: "{{ (lookup('file', '{{ DEPLOY_DIR }}/sas-bases/.orchestration/cadence.yaml') | from_yaml).spec.release }}"
      when:
        - V4_CFG_CADENCE_VERSION is version('2021.1', ">") or V4_CFG_CADENCE_NAME|lower == "fast"
    - name: sasdeployment custom resource - Find order cadence release from configmaps.yaml # noqa: name[casing]
      set_fact:
        V4_CFG_CADENCE_RELEASE: "{{ lookup('file', '{{DEPLOY_DIR}}/sas-bases/base/configmaps.yaml') | regex_search('SAS_CADENCE_RELEASE=(.+)', '\\1') | first }}"
      when:
        - V4_CFG_CADENCE_VERSION is version('2021.1', "<=")
        - V4_CFG_CADENCE_NAME|lower != "fast"

- name: sasdeployment custom resource - Setup orchestration tooling directory # noqa: name[casing]
  tags:
    - install
    - uninstall
    - update
    - cas-onboard
    - offboard
  block:
    - name: sasdeployment custom resource - Make data directory in orchestration tooling directory # noqa: name[casing]
      file:
        path: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data/"
        state: directory
        mode: "0700"
    - name: sasdeployment custom resource - Make work directory in orchestration tooling directory # noqa: name[casing]
      file:
        path: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/work/"
        state: directory
        mode: "0700"
    - name: sasdeployment custom resource - Copy licenses into orchestration tooling directory # noqa: name[casing]
      copy:
        src: "{{ LICENSE_DIRECTORY }}"
        dest: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data"
    - name: sasdeployment custom resource - Copy site-config into orchestration tooling directory # noqa: name[casing]
      synchronize:
        src: "{{ DEPLOY_DIR }}/site-config"
        dest: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data"
        rsync_opts:
          - --exclude=operator-deploy
          - --exclude=sas-tenant-job
    - name: sasdeployment custom resource - Copy kustomization.yaml into orchestration tooling directory # noqa: name[casing]
      copy:
        src: "{{ DEPLOY_DIR }}/kustomization.yaml"
        dest: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data/kustomization.yaml"

- name: sasdeployment custom resource - SAS Viya deployment manifest - Docker # noqa: name[casing]
  when:
    - deployment_tooling == "docker"
  tags:
    - install
    - update
    - cas-onboard
    - offboard
  block:
    - name: sasdeployment custom resource - Generate SAS Viya deployment manifest # noqa: name[casing]
      environment:
        PATH: "{{ ORCHESTRATION_TOOLING_PATH }}"
        WORK_DIRECTORY: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/work"
      command:
        cmd: |
          orchestration create sas-deployment-cr
            --cadence-name "{{ V4_CFG_CADENCE_NAME }}"
            --cadence-version "{{ V4_CFG_CADENCE_VERSION }}"
            --cadence-release "{{ V4_CFG_CADENCE_RELEASE }}"
            --image-registry "{{ V4_CFG_CR_HOST }}"
            --deployment-data "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data/license/certs.zip"
            --user-content "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data/"
      args:
        chdir: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}"
      register: sasdeployment
    - name: sasdeployment custom resource - Write SAS Viya deployment manifest # noqa: name[casing]
      copy:
        content: "{{ sasdeployment.stdout }}"
        dest: "{{ ORCHESTRATION_TOOLING_INSTALL_MANIFEST }}"
        mode: "0660"

- name: sasdeployment custom resource - SAS Viya deployment manifest - Ansible # noqa: name[casing]
  when:
    - deployment_tooling == "ansible"
  tags:
    - install
    - update
    - cas-onboard
    - offboard
  block:
    - name: sasdeployment custom resource - Generate SAS Viya deployment manifest # noqa: name[casing]
      ansible.builtin.shell: >
        docker run --rm
        --user="{{ UID_GID }}"
        --name "orchestration_{{ lookup('password', '/dev/null chars=ascii_lowercase length=8') }}"
        --volume "{{ tmpdir.path }}:/tmp"
        --volume "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data:/data"
        --volume "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/work:/work"
        "{{ V4_CFG_CR_HOST }}/{{ ORCHESTRATION_IMAGE }}"
        create sas-deployment-cr
        --cadence-name {{ V4_CFG_CADENCE_NAME }}
        --cadence-version {{ V4_CFG_CADENCE_VERSION }}
        --cadence-release {{ V4_CFG_CADENCE_RELEASE }}
        --image-registry {{ V4_CFG_CR_HOST }}
        --deployment-data /data/license/certs.zip
        --user-content /data
      register: sasdeployment
    - name: sasdeployment custom resource - Write SAS Viya deployment manifest # noqa: name[casing]
      copy:
        content: "{{ sasdeployment.stdout }}"
        dest: "{{ ORCHESTRATION_TOOLING_INSTALL_MANIFEST }}"
        mode: "0660"

- name: sasdeployment custom resource - Write SAS Viya deployment manifests into orchestration tooling directory # noqa: name[casing]
  when:
    - not V4_DEPLOYMENT_OPERATOR_ENABLED
  tags:
    - install
    - update
    - cas-onboard
    - offboard
  block:
    - name: sasdeployment custom resource - Create manifests directory in orchestration tooling directory # noqa: name[casing]
      file:
        path: "{{ ORCHESTRATION_TOOLING_INSTALL_MANIFESTS_DIRECTORY }}"
        state: directory
        mode: "0700"
    - name: sasdeployment custom resource - Split SAS Viya deployment manifest into orchestration directory # noqa: name[casing]
      command:
        chdir: "{{ ORCHESTRATION_TOOLING_INSTALL_MANIFESTS_DIRECTORY }}"
        cmd: |
          csplit "{{ ORCHESTRATION_TOOLING_INSTALL_MANIFEST }}"
              --prefix='{{ NAMESPACE }}-sasdeployment.'
              --suffix-format='%03d.yaml'
              --elide-empty-files
              '/^----*$/' '{*}'

- name: sasdeployment custom resource - Create SAS Viya namespace # noqa: name[casing]
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - install
    - update

- name: sasdeployment custom resource - create sas-orchestration-secret # noqa: name[casing]
  environment:
    KUBECONFIG: "{{ KUBECONFIG }}"
  ansible.builtin.shell: |
    kubectl -n {{ NAMESPACE }} delete secret sas-orchestration-secret --ignore-not-found=true
    kubectl -n {{ NAMESPACE }} create secret generic sas-orchestration-secret --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson={{ DEPLOY_DIR }}/site-config/cr_access.json
  when:
    - V4_CFG_CR_USER is not none
  tags:
    - install
    - update

- name: sasdeployment custom resource - Create SAS Viya uninstall manifest V4_DEPLOYMENT_OPERATOR_ENABLED - Docker # noqa: name[casing]
  when:
    - V4_DEPLOYMENT_OPERATOR_ENABLED
    - deployment_tooling == "docker"
  tags:
    - uninstall
    - offboard
  block:
    - name: sasdeployment custom resource - Generate SAS Viya uninstall manifest # noqa: name[casing]
      environment:
        PATH: "{{ ORCHESTRATION_TOOLING_PATH }}"
        WORK_DIRECTORY: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/work"
      command:
        cmd: |
          orchestration create sas-deployment-cr
            --cadence-name "{{ V4_CFG_CADENCE_NAME }}"
            --cadence-version "{{ V4_CFG_CADENCE_VERSION }}"
            --cadence-release "{{ V4_CFG_CADENCE_RELEASE }}"
            --image-registry "{{ V4_CFG_CR_HOST }}"
            --deployment-data "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data/license/certs.zip"
            --user-content "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data/"
      args:
        chdir: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}"
      register: sasdeployment
    - name: sasdeployment custom resource - Write SAS Viya uninstall manifest # noqa: name[casing]
      copy:
        content: "{{ sasdeployment.stdout }}"
        dest: "{{ ORCHESTRATION_TOOLING_UNINSTALL_MANIFEST }}"
        mode: "0660"

- name: sasdeployment custom resource - Create SAS Viya uninstall manifest V4_DEPLOYMENT_OPERATOR_ENABLED - Ansible # noqa: name[casing]
  when:
    - V4_DEPLOYMENT_OPERATOR_ENABLED
    - deployment_tooling == "ansible"
  tags:
    - uninstall
    - offboard
  block:
    - name: sasdeployment custom resource - Generate SAS Viya uninstall manifest # noqa: name[casing]
      ansible.builtin.shell: >
        docker run --rm
        --user="{{ UID_GID }}"
        --name "orchestration_{{ lookup('password', '/dev/null chars=ascii_lowercase length=8') }}"
        --volume "{{ tmpdir.path }}:/tmp"
        --volume "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/data:/data"
        --volume "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/work:/work"
        "{{ V4_CFG_CR_HOST }}/{{ ORCHESTRATION_IMAGE }}"
        create sas-deployment-cr
        --cadence-name {{ V4_CFG_CADENCE_NAME }}
        --cadence-version {{ V4_CFG_CADENCE_VERSION }}
        --cadence-release {{ V4_CFG_CADENCE_RELEASE }}
        --image-registry {{ V4_CFG_CR_HOST }}
        --deployment-data /data/license/certs.zip
        --user-content /data
      register: sasdeployment
    - name: sasdeployment custom resource - Write SAS Viya uninstall manifest # noqa: name[casing]
      copy:
        content: "{{ sasdeployment.stdout }}"
        dest: "{{ ORCHESTRATION_TOOLING_UNINSTALL_MANIFEST }}"
        mode: "0660"

- name: sasdeployment custom resource - Create SAS Viya uninstall manifest - Docker # noqa: name[casing]
  when:
    - not V4_DEPLOYMENT_OPERATOR_ENABLED
    - deployment_tooling == "docker"
  tags:
    - uninstall
  block:
    - name: sasdeployment custom resource - Generate SAS Viya uninstall manifest # noqa: name[casing]
      environment:
        PATH: "{{ ORCHESTRATION_TOOLING_PATH }}"
        WORK_DIRECTORY: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/work"
      command:
        cmd: |
          kustomize build {{ DEPLOY_DIR }}
      args:
        chdir: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}"
      register: uninstall
    - name: sasdeployment custom resource - Write SAS Viya uninstall manifest # noqa: name[casing]
      copy:
        content: "{{ uninstall.stdout }}"
        dest: "{{ ORCHESTRATION_TOOLING_UNINSTALL_MANIFEST }}"
        mode: "0660"

- name: sasdeployment custom resource - Create SAS Viya uninstall manifest - Ansible # noqa: name[casing]
  when:
    - not V4_DEPLOYMENT_OPERATOR_ENABLED
    - deployment_tooling == "ansible"
  tags:
    - uninstall
  block:
    - name: sasdeployment custom resource - Generate SAS Viya uninstall manifest # noqa: name[casing]
      ansible.builtin.shell: >
        docker run --rm
        --user="{{ UID_GID }}"
        --name "orchestration_{{ lookup('password', '/dev/null chars=ascii_lowercase length=8') }}"
        --volume "{{ DEPLOY_DIR }}:/data"
        --volume "{{ ORCHESTRATION_TOOLING_DIRECTORY }}/work:/work"
        --entrypoint kustomize
        "{{ V4_CFG_CR_HOST }}/{{ ORCHESTRATION_IMAGE }}"
        build /data
      register: uninstall
    - name: sasdeployment custom resource - Write SAS Viya uninstall manifest # noqa: name[casing]
      copy:
        content: "{{ uninstall.stdout }}"
        dest: "{{ ORCHESTRATION_TOOLING_UNINSTALL_MANIFEST }}"
        mode: "0660"
