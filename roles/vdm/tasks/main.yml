---
- name: Create tmp dir
  tempfile:
    state: directory
    prefix: vdm
  register: vdm_tmp_dir
  tags:
    - install
    - uninstall
    - upgrade

- name: VDM folder struct
  file:
    state: directory
    dest: '{{ DEPLOY_DIR }}/site-config/vdm/{{ item }}'
  with_items:
    - resources
    - transformers
    - generators
  no_log: yes
  tags:
    - install
    - uninstall
    - upgrade

- name: Copy example sitedefault.yaml
  copy:
    src: files/sitedefault.yaml
    dest: "{{ DEPLOY_DIR }}/site-config/sitedefault.yaml"
  when: 
    - SITEDEFAULT is not defined
  tags:
    - install
    - uninstall
    - upgrade

- name: Include Get Order Tasks
  include_tasks: get-order.yaml
  tags:
    - install
    - uninstall
    - upgrade

- include_tasks: vdm_loader.yaml
  vars:
    resources: 
      - "{{BUNDLE_ROOT}}/overlays/network/{{V4_CFG_INGRESS_TYPE}}"
      - "{{BUNDLE_ROOT}}/overlays/cas-{{V4_CFG_CAS_SERVER_TYPE}}"
    generators:
      - "{{ VDM_GENERATORS_PATH }}/sas-shared-config.yaml"
      - "{{ VDM_GENERATORS_PATH }}/ingress-input.yaml"
      - "{{ VDM_GENERATORS_PATH }}/sas-image-pull-secrets.yaml"
      - "{{ VDM_GENERATORS_PATH }}/sas-consul-config.yaml"
    transformers:
      - "{{ BUNDLE_ROOT }}/overlays/required/transformers.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/rabbitmq-transformer.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/stateless-affinity.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/stateful-affinity.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/compute-affinity.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/compute-podtemplate-affinity.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/cas-affinity.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/ss-storclass.yaml" # Fix
  tags:
    - install
    - uninstall
    - upgrade

- name: Include Azure tasks
  include_tasks: azure.yaml
  when:
    - PROVIDER == 'azure'
  tags:
    - install
    - uninstall
    - upgrade

- name: Include AWS tasks
  include_tasks: aws.yaml
  when:
    - PROVIDER == 'aws'
  tags:
    - install
    - uninstall
    - upgrade

- name: Include GCP tasks
  include_tasks: gcp.yaml
  when:
    - PROVIDER == 'gcp'
  tags:
    - install
    - uninstall
    - upgrade

- name: CAS/Compute NFS mounts
  include_tasks: vdm_loader.yaml
  vars:
    transformers:
      - "{{ VDM_TRANSFORMERS_PATH }}/compute-template-nfs.yaml"
      - "{{ VDM_TRANSFORMERS_PATH }}/cas-transformer-volumes.yaml"
  when:
    - V4_CFG_NFS_SVR_HOST is not none
    - V4_CFG_NFS_SVR_PATH is not none
  tags:
    - install
    - uninstall
    - upgrade

- name: MPP cas workers
  include_tasks: vdm_loader.yaml
  vars:
    transformers:
      - "{{ VDM_TRANSFORMERS_PATH }}/cas-transformer-workers.yaml"
  when:
    - V4_CFG_CAS_SERVER_TYPE == "mpp"
  tags:
    - install
    - uninstall
    - upgrade
    
- name: Include PDB Tasks
  include_tasks: pdb.yaml

- name: Include Resources Tasks
  include_tasks: resources.yaml
  tags:
    - install
    - uninstall
    - upgrade

- name: Include openldap
  include_tasks: vdm_loader.yaml
  vars:
    resources: 
      - "{{ VDM_RESOURCES_PATH }}/openldap.yaml"
    generators:
      - "{{ VDM_GENERATORS_PATH }}/openldap-bootstrap-config.yaml"
    transformers:
      - "{{ VDM_TRANSFORMERS_PATH }}/openldap.yaml"
  when: 
    - V4_CFG_ENABLE_EMBEDDED_LDAP 
  tags:
    - install
    - uninstall
    - upgrade

- name: Include Ingress Tasks
  include_tasks: ingress.yaml
  tags:
    - install
    - uninstall
    - upgrade

- name: Include Postgres tasks
  include_tasks: postgres.yaml
  tags:
    - install
    - uninstall
    - upgrade

- name: Include Kustomize Tasks
  include_tasks: kustomize.yaml
  tags:
    - install
    - uninstall
    - upgrade

- name: Create namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ kubeconfig }}"
  when: 
    - DEPLOY
  tags:
    - install
    - upgrade

- name: Deploy PreReqs
  shell: |
    kubectl --kubeconfig {{ kubeconfig }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-wide" -f {{ DEPLOY_DIR }}/site.yaml
    kubectl --kubeconfig {{ kubeconfig }} wait --for condition=established --timeout=60s -l "sas.com/admin=cluster-wide" crd
    kubectl --kubeconfig {{ kubeconfig }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-local" --prune -f {{ DEPLOY_DIR }}/site.yaml
  when: 
    - DEPLOY
  tags:
    - install
    - upgrade

- name: Deploy Manifest
  shell: |
    kubectl --kubeconfig {{ kubeconfig }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=namespace" --prune -f {{ DEPLOY_DIR }}/site.yaml
  when: 
    - DEPLOY
  tags:
    - install
    - upgrade

- name: Deploy Manifest for Istio
  shell: |
    kubectl --kubeconfig {{ kubeconfig }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=namespace" --prune --prune-whitelist=networking.istio.io/v1alpha3/DestinationRule --prune-whitelist=networking.istio.io/v1alpha3/VirtualService -f {{ DEPLOY_DIR }}/site.yaml
  when: 
    - DEPLOY
    - V4_CFG_INGRESS_TYPE == "istio"
  tags:
    - install
    - upgrade

- name: Remove Manifest
  shell: |
    kubectl --kubeconfig {{ kubeconfig }} delete -n {{ NAMESPACE }} -f {{ DEPLOY_DIR }}/site.yaml
  ignore_errors: yes
  when: 
  - DEPLOY
  tags:
    - uninstall

- name: Delete namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NAMESPACE }}"
    wait: true
    kubeconfig: "{{ kubeconfig }}"
    state: absent
  when: 
    - DEPLOY
  tags:
    - uninstall

- name: Delete tmp dir
  file:
    path: "{{ vdm_tmp_dir.path }}"
    state: absent
  tags:
    - install
    - uninstall
    - upgrade