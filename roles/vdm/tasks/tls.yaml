# Copyright Â© 2020-2024, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

# There are several TLS ingress scenarios:
# The mode: full-stack, front-door and disabled
# Each can have either customer provided certs or cert-manager generated certs
# Regardless of type or source of certificates, additional root CA certs can be provided
# See sas-bases/examples/security/README.md for full details
---
- name: TLS - openssl-generator check
  fail:
    msg: "When using openssl-generator, and V4_CFG_TLS_MODE is not 'disabled', and your V4_CFG_CADENCE_VERSION is <= 2021.1, you must provide: V4_CFG_TLS_CERT, V4_CFG_TLS_KEY,
      V4_CFG_TLS_TRUSTED_CA_CERTS"
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - V4_CFG_TLS_GENERATOR == "openssl"
    - V4_CFG_TLS_CERT is none or V4_CFG_TLS_KEY is none or V4_CFG_TLS_TRUSTED_CA_CERTS is none
    - V4_CFG_CADENCE_VERSION is version('2021.1', "<=")
    - V4_CFG_CADENCE_NAME|lower != "fast"
  tags:
    - install
    - uninstall
    - update

- name: TLS - base
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { resources: "overlays/network/{{ V4_CFG_INGRESS_TYPE }}", max: 2021.1.5 }
      - { resources: "overlays/network/{{ V4_CFG_INGRESS_TYPE }}/security", max: 2021.1.2 }
      - { resources: "overlays/network/{{ network_name_map[V4_CFG_INGRESS_TYPE] }}", min: 2021.1.6 }
  tags:
    - install
    - uninstall
    - update

- name: TLS - http facts
  set_fact:
    V4_CFG_DEPLOYMENT_URL_PREFIX: http://
    V4_CFG_DEPLOYMENT_URL_PORT: :80
  when:
    - V4_CFG_TLS_MODE == "disabled"
  tags:
    - install
    - uninstall
    - update

- name: TLS - cert manager
  when:
    - V4_CFG_TLS_MODE != "disabled"
  tags:
    - install
    - uninstall
    - update
  block:
    - name: TLS - https facts
      set_fact:
        V4_CFG_DEPLOYMENT_URL_PREFIX: https://
        V4_CFG_DEPLOYMENT_URL_PORT: :443
    - name: TLS - security
      overlay_facts:
        cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
        cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
        existing: "{{ vdm_overlays }}"
        add:
          - { resources: overlays/cert-manager-issuer }
      when:
        - V4_CFG_TLS_GENERATOR == "cert-manager"

- name: TLS - Full-stack TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: overlays/network/ingress/security/transformers/ingress-tls-transformers.yaml, max: 2021.1.2, priority: 51 }
      - { transformers: overlays/network/ingress/security/transformers/product-tls-transformers.yaml, max: 2021.1.2, priority: 51 }
      - { transformers: overlays/network/ingress/security/transformers/backend-tls-transformers.yaml, max: 2021.1.2, priority: 51 }
      - { components: components/security/core/base/full-stack-tls, min: 2021.1.3, priority: 51 }
      - { components: components/security/network/networking.k8s.io/ingress/nginx.ingress.kubernetes.io/full-stack-tls, min: 2021.1.3, priority: 51 }
  when:
    - V4_CFG_TLS_MODE == "full-stack"
  tags:
    - install
    - uninstall
    - update

- name: TLS - Front-door TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: overlays/network/ingress/security/transformers/cas-connect-tls-transformers.yaml, max: 2021.1.2, priority: 51 }
      - { transformers: overlays/network/ingress/security/transformers/ingress-tls-transformers.yaml, max: 2021.1.2, priority: 51 }
      - { components: components/security/core/base/front-door-tls, min: 2021.1.3, priority: 51 }
      - { components: components/security/network/networking.k8s.io/ingress/nginx.ingress.kubernetes.io/front-door-tls, min: 2021.1.3, priority: 51 }
  when:
    - V4_CFG_TLS_MODE == "front-door"
  tags:
    - install
    - uninstall
    - update

- name: TLS - Ingress-only TLS - check cadence
  ansible.builtin.fail:
    msg: V4_CFG_TLS_MODE=ingress-only is not supported for cadences older than 2021.2.4
  when:
    - V4_CFG_TLS_MODE == "ingress-only"
    - V4_CFG_CADENCE_VERSION is version('2021.2.4', "<")
    - V4_CFG_CADENCE_NAME|lower != "fast"
  tags:
    - install
    - uninstall
    - update

- name: TLS - Ingress-only TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { components: components/security/core/ingress-only-tls, min: 2021.2.4, priority: 51 }
      - { components: components/security/network/networking.k8s.io/ingress/nginx.ingress.kubernetes.io/front-door-tls, min: 2021.2.4, priority: 51 }
  when:
    - V4_CFG_TLS_MODE == "ingress-only"
  tags:
    - install
    - uninstall
    - update

- name: TLS - Truststores only
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: overlays/network/ingress/security/transformers/truststore-transformers-without-backend-tls.yaml, max: 2021.1.2, priority: 51 }
      - { components: components/security/core/base/truststores-only, min: 2021.1.3, priority: 51 }
  when:
    - V4_CFG_TLS_MODE == "disabled"
    - V4_CFG_TLS_TRUSTED_CA_CERTS is not none
  tags:
    - install
    - uninstall
    - update

- name: TLS - customer provided ca certificates
  when:
    - V4_CFG_TLS_TRUSTED_CA_CERTS is not none
  tags:
    - install
    - uninstall
    - update
  block:
    - name: TLS - copy customer provided ca certs
      copy:
        src: "{{ (V4_CFG_TLS_TRUSTED_CA_CERTS | realpath) + '/' }}"
        dest: "{{ DEPLOY_DIR }}/site-config/vdm/security/cacerts/"
        mode: "0660"
    - name: TLS - locate ca certs
      find:
        paths: "{{ DEPLOY_DIR }}/site-config/vdm/security/cacerts/"
        depth: 2
      register: V4_CFG_TLS_TRUSTED_CA_CERT_FILES
    - name: TLS - add customer provided ca cert generator
      overlay_facts:
        cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
        cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
        existing: "{{ vdm_overlays }}"
        add:
          - { generators: customer-provided-ca-certificates.yaml, vdm: true }

- name: TLS - customer provided server certificates
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - V4_CFG_TLS_CERT is not none
    - V4_CFG_TLS_KEY is not none
  tags:
    - install
    - uninstall
    - update
  block:
    - name: TLS - create security folder
      ansible.builtin.file:
        path: "{{ DEPLOY_DIR }}/site-config/vdm/security"
        state: directory
        mode: "0755"
    - name: TLS - copy cert and key
      copy:
        src: "{{ item.src }}"
        dest: "{{ DEPLOY_DIR }}/site-config/vdm/security/{{ item.dest }}"
        mode: "0660"
      with_items:
        - src: "{{ V4_CFG_TLS_CERT }}"
          dest: sas-nginx-ingress.crt
        - src: "{{ V4_CFG_TLS_KEY }}"
          dest: sas-nginx-ingress.key
    - name: TLS - add customer provided ingress cert generator
      overlay_facts:
        cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
        cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
        existing: "{{ vdm_overlays }}"
        add:
          - { generators: customer-provided-ingress-certificate.yaml, vdm: true }

- name: TLS - Certificate Generation - cert-manager
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: cert-manager-provided-ingress-certificate.yaml, vdm: true, max: "2022.1", priority: 70 }
      - { transformers: overlays/cert-manager-provided-ingress-certificate/ingress-annotation-transformer.yaml, min: 2022.1.1, priority: 70 }
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - (V4_CFG_TLS_CERT is none and V4_CFG_TLS_KEY is none and V4_CFG_TLS_GENERATOR == "cert-manager")
  tags:
    - install
    - uninstall
    - update

- name: TLS - Certificate Generation - openssl
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { resources: openssl-generated-ingress-certificate.yaml, vdm: true, min: "2021.2" }
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - (V4_CFG_TLS_CERT is none and V4_CFG_TLS_KEY is none and V4_CFG_TLS_GENERATOR == "openssl")
  tags:
    - install
    - update

- name: TLS - Configuring Certificate Attributes
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { generators: customer-provided-merge-sas-certframe-configmap.yaml, vdm: true }
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - (V4_CFG_TLS_GENERATOR == "cert-manager" or V4_CFG_TLS_GENERATOR == "openssl")
  tags:
    - install
    - uninstall
    - update

- name: TLS - Consul UI
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { resources: consul-ui.yaml, vdm: true }
  when:
    - V4_CFG_CONSUL_ENABLE_LOADBALANCER
  tags:
    - install
    - uninstall
    - update

- name: Add ingress class
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: nginx-ingressclass.yaml, vdm: true, max: 2021.1.5 }
  when:
    - V4_CFG_INGRESS_TYPE == "ingress"
  tags:
    - install
    - update
