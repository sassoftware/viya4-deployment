# There are several TLS ingress scenarios:
# The mode: full-stack, front-door and disabled
# Each can have either customer provided certs or cert-manager generated certs
# Regardless of type or source of certificates, additional root CA certs can be provided
# See sas-bases/examples/security/README.md for full details
- name: tls - openssl-generator check
  fail:
    msg: "When using openssl-generator and V4_CFG_TLS_MODE is not 'disabled' you must provide: V4_CFG_TLS_CERT, V4_CFG_TLS_KEY, V4_CFG_TLS_TRUSTED_CA_CERTS"
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - V4_CFG_TLS_GENERATOR == "openssl"
    - V4_CFG_TLS_CERT is none or V4_CFG_TLS_KEY is none or V4_CFG_TLS_TRUSTED_CA_CERTS is none
  tags:
    - install
    - uninstall
    - update

- name: tls - base
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { resources: "overlays/network/{{ V4_CFG_INGRESS_TYPE }}", max: "2021.1.5" }
      - { resources: "overlays/network/{{ V4_CFG_INGRESS_TYPE }}/security", max: "2021.1.2" }
      - { resources: "overlays/network/{{ network_name_map[V4_CFG_INGRESS_TYPE] }}", min: "2021.1.6" }
  tags:
    - install
    - uninstall
    - update

- name: tls - http facts
  set_fact:
    V4_CFG_DEPLOYMENT_URL_PREFIX: 'http://'
    V4_CFG_DEPLOYMENT_URL_PORT: ':80'
  when:
    - V4_CFG_TLS_MODE == "disabled"
  tags:
    - install
    - uninstall
    - update

- block:
  - name: tls - https facts
    set_fact:
      V4_CFG_DEPLOYMENT_URL_PREFIX: 'https://'
      V4_CFG_DEPLOYMENT_URL_PORT: ':443'
  - name: tls - security
    overlay_facts:
      cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
      cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
      existing: "{{ vdm_overlays }}"
      add:
        - { resources: "overlays/cert-manager-issuer" }
    when:
      - V4_CFG_TLS_GENERATOR == "cert-manager"
  when:
    - V4_CFG_TLS_MODE != "disabled"
  tags:
    - install
    - uninstall
    - update

- name: tls - Full-stack TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "overlays/network/ingress/security/transformers/ingress-tls-transformers.yaml", max: "2021.1.2", priority: 51 }
      - { transformers: "overlays/network/ingress/security/transformers/product-tls-transformers.yaml", max: "2021.1.2", priority: 51 }
      - { transformers: "overlays/network/ingress/security/transformers/backend-tls-transformers.yaml", max: "2021.1.2", priority: 51 }
      - { components: "components/security/core/base/full-stack-tls", min: "2021.1.3" }
      - { components: "components/security/network/networking.k8s.io/ingress/nginx.ingress.kubernetes.io/full-stack-tls", min: "2021.1.3" }
  when:
    - V4_CFG_TLS_MODE == "full-stack"
  tags:
    - install
    - uninstall
    - update

- name: tls - Front-door TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "overlays/network/ingress/security/transformers/cas-connect-tls-transformers.yaml", max: "2021.1.2", priority: 51 }
      - { transformers: "overlays/network/ingress/security/transformers/ingress-tls-transformers.yaml", max: "2021.1.2", priority: 51 }
      - { components: "components/security/core/base/front-door-tls", min: "2021.1.3" }
      - { components: "components/security/network/networking.k8s.io/ingress/nginx.ingress.kubernetes.io/front-door-tls", min: "2021.1.3" }
  when:
    - V4_CFG_TLS_MODE == "front-door"
  tags:
    - install
    - uninstall
    - update

- name: tls - Ingress-only TLS - check cadence
  ansible.builtin.fail:
    msg: "V4_CFG_TLS_MODE=ingress-only is not supported for cadences older than 2021.2.4"
  when:
    - V4_CFG_TLS_MODE == "ingress-only"
    - V4_CFG_CADENCE_VERSION is version('2021.2.4', "<")
    - V4_CFG_CADENCE_NAME != "fast"
  tags:
    - install
    - uninstall
    - update

- name: tls - Ingress-only TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { components: "components/security/core/ingress-only-tls", min: "2021.2.4" }
      - { components: "components/security/network/networking.k8s.io/ingress/nginx.ingress.kubernetes.io/front-door-tls", min: "2021.2.4" }
  when:
    - V4_CFG_TLS_MODE == "ingress-only"
  tags:
    - install
    - uninstall
    - update

- name: tls - Truststores only
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "overlays/network/ingress/security/transformers/truststore-transformers-without-backend-tls.yaml", max: "2021.1.2", priority: 51 }
      - { components: "components/security/core/base/truststores-only", min: "2021.1.3" }
  when:
    - V4_CFG_TLS_MODE == "disabled"
    - V4_CFG_TLS_TRUSTED_CA_CERTS is not none
  tags:
    - install
    - uninstall
    - update

- name: tls - customer provided ca certificates
  block:
    - copy:
        src: "{{ (V4_CFG_TLS_TRUSTED_CA_CERTS|realpath) + '/' }}"
        dest: "{{ DEPLOY_DIR }}/site-config/vdm/security/cacerts/"
        mode: "0660"
    - find:
        paths: "{{ DEPLOY_DIR }}/site-config/vdm/security/cacerts/"
        depth: 2
      register: V4_CFG_TLS_TRUSTED_CA_CERT_FILES
    - overlay_facts:
        cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
        cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
        existing: "{{ vdm_overlays }}"
        add:
          - { generators: "customer-provided-ca-certificates.yaml", vdm: true }
  when:
    - V4_CFG_TLS_TRUSTED_CA_CERTS is not none
  tags:
    - install
    - uninstall
    - update

- name: tls - customer provided server certificates
  block:
  - ansible.builtin.file:
      path: "{{ DEPLOY_DIR }}/site-config/vdm/security"
      state: directory
      mode: "0755"
  - copy:
      src: "{{ item.src }}"
      dest: "{{ DEPLOY_DIR }}/site-config/vdm/security/{{ item.dest }}"
      mode: "0660"
    with_items:
      - src: "{{ V4_CFG_TLS_CERT }}"
        dest: "sas-nginx-ingress.crt"
      - src: "{{ V4_CFG_TLS_KEY }}"
        dest: "sas-nginx-ingress.key"
  - overlay_facts:
      cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
      cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
      existing: "{{ vdm_overlays }}"
      add:
        - { generators: "customer-provided-ingress-certificate.yaml", vdm: true }
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - V4_CFG_TLS_CERT is not none
    - V4_CFG_TLS_KEY is not none
  tags:
    - install
    - uninstall
    - update

- name: tls - Certificate Generation
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "cert-manager-provided-ingress-certificate.yaml", vdm: true, priority: 70 }
      - { generators: "customer-provided-merge-sas-certframe-configmap.yaml", vdm: true }
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - (V4_CFG_TLS_CERT is none and V4_CFG_TLS_KEY is none and V4_CFG_TLS_GENERATOR == "cert-manager") or V4_CFG_TLS_GENERATOR == "openssl"
  tags:
    - install
    - uninstall
    - update


- name: tls - Consul UI
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { resources: "consul-ui.yaml", vdm: true }
  when: 
    - V4_CFG_CONSUL_ENABLE_LOADBALANCER
  tags:
    - install
    - uninstall
    - update

- name: add ingress class
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "nginx-ingressclass.yaml", vdm: true, max: "2021.1.5" }
  when:
    - V4_CFG_INGRESS_TYPE == "ingress"
  tags:
    - install
    - update
