# Copyright Â© 2020-2023, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
- name: Deployment-operator - validate V4_DEPLOYMENT_OPERATOR_SCOPE
  ansible.builtin.assert:
    that: V4_DEPLOYMENT_OPERATOR_SCOPE is match ('^(cluster|namespace)$')
    msg: >
      V4_DEPLOYMENT_OPERATOR_SCOPE must set to either 'cluster' or 'namespace'.
      See usage documentation at docs/CONFIG-VARS.md

- name: Deployment-operator - Set base OPERATOR_DEPLOY_DIRECTORY
  set_fact:
    OPERATOR_DEPLOY_DIRECTORY: "{{ BASE_DIR | regex_replace('\\/$', '') }}/{{ CLUSTER_NAME }}/{{ NAMESPACE }}/operator-deploy"
  tags:
    - install
    - uninstall
    - update

- name: Deployment-operator - Remove old files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ OPERATOR_DEPLOY_DIRECTORY }}"
    - "{{ OPERATOR_DEPLOY_DIRECTORY }}-clusterwide"
    - "{{ OPERATOR_DEPLOY_DIRECTORY }}-namespace"
  tags:
    - install
    - update

- name: Deployment-operator - set scoped OPERATOR_DEPLOY_DIRECTORY
  set_fact:
    OPERATOR_DEPLOY_DIRECTORY: "{{ OPERATOR_DEPLOY_DIRECTORY + '-clusterwide' if V4_DEPLOYMENT_OPERATOR_SCOPE == 'cluster' else OPERATOR_DEPLOY_DIRECTORY + '-namespace'}}"
  tags:
    - install
    - uninstall
    - update

- name: Deployment-operator - create operator-deploy directory
  file:
    state: directory
    dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}"
    mode: "0770"
  tags:
    - install
    - update

- name: Deployment-operator - ensure cluster-wide mode namespace is not the same as the SAS Viya namespace
  ansible.builtin.assert:
    that: "{{ V4_DEPLOYMENT_OPERATOR_NAMESPACE != NAMESPACE}}"
    msg: >
      Invalid V4_DEPLOYMENT_OPERATOR_NAMESPACE value: {{ V4_DEPLOYMENT_OPERATOR_NAMESPACE }}

      When the V4_DEPLOYMENT_OPERATOR_SCOPE is set to `cluster`, the V4_DEPLOYMENT_OPERATOR_NAMESPACE value cannot be
      the same as NAMESPACE.
  when:
    - V4_DEPLOYMENT_OPERATOR_SCOPE|lower == "cluster"
  tags:
    - install
    - update

- name: Deployment-operator - Set V4_DEPLOYMENT_OPERATOR_NAMESPACE to SAS Viya namespace when using namespace mode
  set_fact:
    V4_DEPLOYMENT_OPERATOR_NAMESPACE: "{{ NAMESPACE }}"
  when:
    - V4_DEPLOYMENT_OPERATOR_SCOPE|lower == "namespace"
  tags:
    - install
    - uninstall
    - update

- name: Deployment-operator - create namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ V4_DEPLOYMENT_OPERATOR_NAMESPACE }}"
    wait: true
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - install
    - update

- name: Deployment-operator - copy example files
  ansible.builtin.copy:
    src: "{{ DEPLOY_DIR }}/sas-bases/examples/deployment-operator/deploy/"
    dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}"
  tags:
    - install
    - update

- name: Deployment-operator - make transformer.yaml writable
  ansible.builtin.file:
    path: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/transformer.yaml"
    state: file
    mode: "0660"
  tags:
    - install
    - update

- name: Deployment-operator - update namespace in transformer.yaml
  replace:
    path: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/transformer.yaml"
    regexp: "{% raw %}{{ NAME-OF-NAMESPACE }}{% endraw %}"
    replace: "{{ V4_DEPLOYMENT_OPERATOR_NAMESPACE }}"
  tags:
    - install
    - update

- name: Deployment-operator - update cluster role binding in transformer.yaml
  replace:
    path: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/transformer.yaml"
    regexp: "{% raw %}{{ NAME-OF-CLUSTERROLEBINDING }}{% endraw %}"
    replace: "{{ V4_DEPLOYMENT_OPERATOR_CRB }}"
  tags:
    - install
    - update

- name: Deployment-operator - determine if required/transformers.yaml overlay required
  block:
    - name: Deployment-operator - Set required_transformers
      set_fact:
        required_transformers: true
    - name: Deployment-operator - Create required directory
      file:
        state: directory
        dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/required"
        mode: "0770"
    - name: Deployment-operator - Copy required/transformers.yaml
      copy:
        src: "{{ DEPLOY_DIR }}/sas-bases/overlays/required/transformers.yaml"
        dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/required/transformers.yaml"
        mode: "0660"
  when:
    - V4_CFG_CADENCE_VERSION is version('2021.1.6', "<")
    - V4_CFG_CADENCE_NAME|lower != "fast"
  tags:
    - install
    - update

- name: Deployment-operator - copy mirror example
  copy:
    src: "{{ DEPLOY_DIR }}/sas-bases/examples/mirror/mirror.yaml"
    dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/mirror.yaml"
    mode: "0660"
  when:
    - V4_CFG_CR_HOST != "cr.sas.com"
  tags:
    - install
    - update

- name: Deployment-operator - update mirror example
  replace:
    path: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/mirror.yaml"
    regexp: "{% raw %}{{ MIRROR-HOST }}{% endraw %}"
    replace: "{{ V4_CFG_CR_HOST }}"
  when:
    - V4_CFG_CR_HOST != "cr.sas.com"
  tags:
    - install
    - update

- name: Deployment-operator - Determine kustomization content
  set_fact:
    image_pull_secret_patch_target: "{{ 'ServiceAccount'
                                     if (V4_CFG_CR_USER is not none and
                                     V4_CFG_CADENCE_VERSION is version('2021.1.5', '<') and
                                     V4_CFG_CADENCE_NAME|lower != 'fast') else 'Deployment'}}"
    secret_generator_required: "{{ true if (V4_CFG_CADENCE_VERSION is version('2021.1.5', '<') and
      V4_CFG_CADENCE_NAME|lower != 'fast') else false}}"
  tags:
    - install
    - update

- name: Deployment-operator - copy secrets
  copy:
    src: "{{ DEPLOY_DIR }}/sas-bases/base/secrets.yaml"
    dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/secrets.yaml"
    mode: "0660"
  tags:
    - install
    - update

- name: Deployment-operator - copy CR access
  template:
    src: cr_access.json
    dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}/site-config/cr_access.json"
    mode: "0660"
  when:
    - V4_CFG_CR_USER is not none
  tags:
    - install
    - update

- name: Deployment-operator - create kustomization.yaml
  template:
    src: deployment_operator_kustomization.yaml
    dest: "{{ OPERATOR_DEPLOY_DIRECTORY }}/kustomization.yaml"
    mode: "0660"
  tags:
    - install
    - update

- name: Deployment-operator - deploy
  block:
    - name: Deployment-operator - Generate deployment-operator manifest - Ansible
      ansible.builtin.shell: >
        docker run --rm
        --user="{{ UID_GID }}"
        --name "orchestration_{{ lookup('password', '/dev/null chars=ascii_lowercase length=8') }}"
        --volume "{{ OPERATOR_DEPLOY_DIRECTORY }}:/data"
        --entrypoint kustomize
        "{{ V4_CFG_CR_HOST }}/{{ ORCHESTRATION_IMAGE }}"
        build /data -o /data/SASDeploymentOperator.yaml
      when:
        - deployment_tooling == "ansible"
    - name: Deployment-operator - Generate deployment-operator manifest - Docker
      environment:
        PATH: "{{ ORCHESTRATION_TOOLING_PATH }}"
      command:
        cmd: |
          kustomize build {{ OPERATOR_DEPLOY_DIRECTORY }} -o {{ OPERATOR_DEPLOY_DIRECTORY }}/SASDeploymentOperator.yaml
      args:
        chdir: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}"
      when:
        - deployment_tooling == "docker"
    - name: Deployment-operator - Apply deployment-operator manifest
      kubernetes.core.k8s:
        src: "{{ OPERATOR_DEPLOY_DIRECTORY }}/SASDeploymentOperator.yaml"
        state: present
        namespace: "{{ V4_DEPLOYMENT_OPERATOR_NAMESPACE }}"
        kubeconfig: "{{ KUBECONFIG }}"
      when:
        - DEPLOY
  tags:
    - install
    - update

- name: Deployment-operator - create deployment-operator-clusterwide.yaml
  ansible.builtin.template:
    src: deployment-operator-clusterwide.yaml
    dest: "{{ BASE_DIR | regex_replace('\\/$', '') }}/{{ CLUSTER_NAME }}/deployment-operator-clusterwide.yaml"
    mode: "0660"
  when:
    - V4_DEPLOYMENT_OPERATOR_SCOPE|lower == "cluster"
  tags:
    - install
    - update

- name: Deployment-operator - Get a list of all SASDeployments in cluster
  kubernetes.core.k8s_info:
    kubeconfig: "{{ KUBECONFIG }}"
    api_version: orchestration.sas.com/v1alpha1
    kind: SASDeployment
  register: cluster_sasdeployments
  tags:
    - uninstall

- name: Deployment-operator - Skip deletion if other SASDeployment resources still exist
  ansible.builtin.debug:
    msg: >
      A SAS Viya deployment that relies on the Deployment Operator still exists in cluster in the following namespaces:
      {{ cluster_sasdeployments.resources | map(attribute='metadata.namespace') | list | join(', ') }}.
      Skipping Deployment Operator deletion.
  when:
    - cluster_sasdeployments.resources|length != 0
  tags:
    - uninstall

- name: Deployment-operator - uninstall
  block:
    - name: Deployment-operator - Uninstall serviceaccounts, roles, rolebindings, deployments, and secrets
      environment:
        KUBECONFIG: "{{ KUBECONFIG }}"
      ansible.builtin.shell: >
        kubectl delete serviceaccounts,roles,rolebindings,deployments,secrets
        -n {{ V4_DEPLOYMENT_OPERATOR_NAMESPACE }} --selector "app.kubernetes.io/name=sas-deployment-operator"
    - name: Deployment-operator - Collect clusterrolebindings
      environment:
        KUBECONFIG: "{{ KUBECONFIG }}"
      ansible.builtin.shell: >
        kubectl get clusterrolebindings --selector "app.kubernetes.io/name=sas-deployment-operator"  -o jsonpath='{.items[?(@.subjects[0].namespace == "{{ V4_DEPLOYMENT_OPERATOR_NAMESPACE
        }}")].metadata.name}'
      register: result
    - name: Deployment-operator - Uninstall clusterrolebindings
      environment:
        KUBECONFIG: "{{ KUBECONFIG }}"
      ansible.builtin.shell: >
        kubectl delete clusterrolebindings {{ result.stdout }}
      when:
        - result.stdout|length > 0
  when:
    - cluster_sasdeployments.resources|length == 0
    - DEPLOY
  tags:
    - uninstall

- name: Deployment-operator - Delete namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ V4_DEPLOYMENT_OPERATOR_NAMESPACE }}"
    wait: true
    wait_timeout: 600
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  when:
    - cluster_sasdeployments.resources|length == 0
    - DEPLOY
  tags:
    - uninstall

- name: Deployment-operator - remove deployment-operator-clusterwide.yaml
  file:
    path: "{{ BASE_DIR | regex_replace('\\/$', '') }}/{{ CLUSTER_NAME }}/deployment-operator-clusterwide.yaml"
    state: absent
  when:
    - V4_DEPLOYMENT_OPERATOR_SCOPE|lower == "cluster"
    - cluster_sasdeployments.resources|length == 0
    - DEPLOY
  tags:
    - uninstall
