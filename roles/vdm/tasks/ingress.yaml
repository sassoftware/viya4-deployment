# There are several TLS ingress scenarios:
# The mode: full-stack, front-door and disabled
# Each can have either customer provided certs or cert-manager generated certs
# Regardless of type or source of certificates, additional root CA certs can be provided
# See sas-bases/examples/security/README.md for full details
- name: ingress - base
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { resources: "overlays/network/{{ V4_CFG_INGRESS_TYPE }}" }
      - { resources: "overlays/network/{{ V4_CFG_INGRESS_TYPE }}/security" }
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - http facts
  set_fact:
    V4_CFG_DEPLOYMENT_URL_PREFIX: 'http://'
    V4_CFG_DEPLOYMENT_URL_PORT: ':80'
  when:
    - V4_CFG_TLS_MODE == "disabled"
  tags:
    - install
    - uninstall
    - upgrade

- block:
  - name: ingress - https facts
    set_fact:
      V4_CFG_DEPLOYMENT_URL_PREFIX: 'https://'
      V4_CFG_DEPLOYMENT_URL_PORT: ':443'
  - name: ingress - security
    overlay_facts:
      cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
      cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
      existing: "{{ vdm_overlays }}"
      add:
        - { resources: "overlays/cert-manager-issuer" }
        - { transformers: "overlays/network/ingress/security/transformers/ingress-tls-transformers.yaml", priority: 51 }
  when:
    - V4_CFG_TLS_MODE != "disabled"
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - customer provided ca certificates
  block:
    - copy:
        src: "{{ (V4_CFG_TLS_TRUSTED_CA_CERTS|realpath) + '/' }}"
        dest: "{{ DEPLOY_DIR }}/site-config/vdm/security/cacerts/"
        mode: "0660"
    - find:
        paths: "{{ DEPLOY_DIR }}/site-config/vdm/security/cacerts/"
        depth: 2
      register: V4_CFG_TLS_TRUSTED_CA_CERT_FILES
    - overlay_facts:
        cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
        cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
        existing: "{{ vdm_overlays }}"
        add:
          - { generators: "customer-provided-ca-certificates.yaml", vdm: true }
  when:
    # NOTE: These can be provided to add to the trust store even when TLS mode is "disabled" to establish outbound trust
    - V4_CFG_TLS_MODE != "disabled"
    - V4_CFG_TLS_TRUSTED_CA_CERTS is not none
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - customer provided server certificates
  block:
  - copy:
      src: "{{ item.src }}"
      dest: "{{ DEPLOY_DIR }}/site-config/vdm/security/{{ item.dest }}"
      mode: "0660"
    with_items:
      - src: "{{ V4_CFG_TLS_CERT }}"
        dest: "sas-nginx-ingress.crt"
      - src: "{{ V4_CFG_TLS_KEY }}"
        dest: "sas-nginx-ingress.key"
  - overlay_facts:
      cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
      cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
      existing: "{{ vdm_overlays }}"
      add:
        - { generators: "customer-provided-ingress-certificate.yaml", vdm: true }
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - V4_CFG_TLS_CERT is not none
    - V4_CFG_TLS_KEY is not none
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - Cert-manager Certificate Generation
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "cert-manager-provided-ingress-certificate.yaml", vdm: true, priority: 70 }
      - { generators: "customer-provided-merge-sas-certframe-configmap.yaml", vdm: true }
  when:
    - V4_CFG_TLS_MODE != "disabled"
    - V4_CFG_TLS_CERT is none
    - V4_CFG_TLS_KEY is none
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - Full-stack TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "overlays/network/ingress/security/transformers/product-tls-transformers.yaml", priority: 51 }
      - { transformers: "overlays/network/ingress/security/transformers/backend-tls-transformers.yaml", priority: 51 }
  when:
    - V4_CFG_TLS_MODE == "full-stack"
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - Front-door TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "overlays/network/ingress/security/transformers/cas-connect-tls-transformers.yaml",priority: 51 }
  when:
    - V4_CFG_TLS_MODE == "front-door"
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - Disabled TLS
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { transformers: "overlays/network/ingress/security/transformers/truststore-transformers-without-backend-tls.yaml",priority: 51 }
  when:
    - V4_CFG_TLS_MODE == "disabled"
    - V4_CFG_TLS_TRUSTED_CA_CERTS is not none
  tags:
    - install
    - uninstall
    - upgrade

- name: ingress - Consul UI
  overlay_facts:
    cadence_name: "{{ V4_CFG_CADENCE_NAME }}"
    cadence_number: "{{ V4_CFG_CADENCE_VERSION }}"
    existing: "{{ vdm_overlays }}"
    add:
      - { resources: "consul-ui.yaml", vdm: true }
  when: 
    - V4_CFG_CONSUL_ENABLE_LOADBALANCER
  tags:
    - install
    - uninstall
    - upgrade
