---
- name: Add helm repo
  community.kubernetes.helm_repository:
    repo_name: ingress-nginx
    repo_url: https://kubernetes.github.io/ingress-nginx/
  tags:
    - install
    - uninstall
    - upgrade

- name: Create namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ nginx_namespace }}"
    wait: true
    kubeconfig: "{{ kubeconfig }}"
  tags:
    - install
    - upgrade

- name: Deploy ingress-nginx
  community.kubernetes.helm:
    name: "{{ nginx_name }}"
    chart_ref: ingress-nginx/ingress-nginx
    namespace: "{{ nginx_namespace }}"
    values: "{{ nginx_config }}"
    kubeconfig_path: "{{ kubeconfig }}"
    chart_version: "{{ chart_version }}"
    wait: true
  tags:
    - install
    - upgrade

- name: Lookup ingress
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Service
    name: ingress-nginx-controller
    namespace: "{{ nginx_namespace }}"
    kubeconfig: "{{ kubeconfig }}"
  until: "ingress_config.resources[0].status.loadBalancer.ingress is defined and (ingress_config.resources[0].status.loadBalancer.ingress[0].ip is defined or ingress_config.resources[0].status.loadBalancer.ingress[0].hostname is defined)"  
  register: ingress_config
  tags:
    - install
    - upgrade
    - uninstall

- set_fact: 
    ingress_endpoint: "{{ ingress_config.resources[0].status.loadBalancer.ingress[0].ip |default(ingress_config.resources[0].status.loadBalancer.ingress[0].hostname, true) }}"
    ingress_type: "{{ 'ip' if (ingress_config.resources[0].status.loadBalancer.ingress[0].ip is defined) else 'dns' }}"
    cacheable: yes
  tags:
    - install
    - upgrade
    - uninstall

- name: Remove ingress-nginx
  community.kubernetes.helm:
    name: "{{ nginx_name }}"
    namespace: "{{ nginx_namespace }}"
    kubeconfig: "{{ kubeconfig }}"
    wait: true
    values: "{{ nginx_config }}"
    state: absent
  tags:
    - uninstall

- name: Remove namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ nginx_namespace }}"
    wait: true
    wait_timeout: 600
    state: absent
    kubeconfig: "{{ kubeconfig }}"
  tags:
    - uninstall
