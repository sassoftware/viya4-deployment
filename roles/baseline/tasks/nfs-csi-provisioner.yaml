# Copyright Â© 2020-2025, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
# This file contains the csi-driver-nfs (NFS CSI) provisioner setup tasks for the baseline role.
# It is included from main.yaml when csi-driver-nfs is required.
# NOTE: This file supports NFS storage provisioning for Kubernetes clusters on multiple cloud providers,
# including AWS (EFS), GCP (Filestore/NetApp), and generic NFS for other environments. Configuration is conditional per provider.

# Name: csi-driver-nfs (NFS CSI Provisioner)
# Chart Repo URL: https://kubernetes-csi.github.io/csi-driver-nfs/
# Container registries: registry.k8s.io, gcr.io
# Chart Source: https://github.com/kubernetes-csi/csi-driver-nfs/tree/master/charts
# Purpose: Provides NFS storage provisioning for Kubernetes using the csi-driver-nfs Helm chart.

# Remove deprecated nfs-client-provisioner Helm release if present
- name: Remove deprecated nfs-client-provisioner
  kubernetes.core.helm:
    name: nfs-client
    namespace: nfs-client
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  tags:
    - install
    - uninstall
    - update

# Remove deprecated efs-provisioner Helm release if present
- name: Remove deprecated efs-provisioner
  kubernetes.core.helm:
    name: efs-provisioner
    namespace: efs-provisioner
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
  tags:
    - install
    - uninstall
    - update

# Remove deprecated efs-provisioner namespace if present
- name: Remove deprecated efs-provisioner namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: efs-provisioner
    state: absent
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - install
    - uninstall
    - update

# Update csi-driver-nfs configuration for AWS EFS backend
- name: Update csi-driver-nfs configurations for EFS
  set_fact:
    CSI_DRIVER_NFS_CONFIG: "{{ CSI_DRIVER_NFS_CONFIG | combine(CSI_DRIVER_NFS_EFS_CONFIG, recursive=True) }}"
    PG_NFS_CLIENT_CONFIG: "{{ CSI_DRIVER_NFS_PG_CONFIG | combine(CSI_DRIVER_NFS_EFS_CONFIG, recursive=True) }}"
  when:
    - PROVIDER == "aws"
    - STORAGE_TYPE_BACKEND is defined
    - STORAGE_TYPE_BACKEND == "efs"
  tags:
    - install
    - update

# Update csi-driver-nfs configuration for Google Filestore
- name: Update csi-driver-nfs configuration for Google Filestore
  set_fact:
    CSI_DRIVER_NFS_CONFIG:
      driver:
        mountPermissions: "0777"
      storageClass:
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        create: true
        name: sas
        annotations:
        parameters:
          server: "{{ V4_CFG_RWX_FILESTORE_ENDPOINT }}"
          share: "/volumes/pvs"
          subDir: ${pvc.metadata.namespace}/${pvc.metadata.name}/${pv.metadata.name}
          mountPermissions: "0777"
        mountOptions:
          - nolock
          - noatime
          - nodiratime
          - rsize=262144
          - wsize=262144
  when:
    - PROVIDER == "gcp"
    - V4_CFG_RWX_FILESTORE_PATH == "/volumes"
  tags:
    - install
    - update

# Update csi-driver-nfs configuration for Google Netapp
- name: Update csi-driver-nfs configuration for Google Netapp
  set_fact:
    CSI_DRIVER_NFS_CONFIG:
      driver:
        mountPermissions: "0777"
      storageClass:
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        create: true
        name: sas
        annotations:
        parameters:
          server: "{{ V4_CFG_RWX_FILESTORE_ENDPOINT }}"
          share: "{{ V4_CFG_RWX_FILESTORE_PATH }}"
          subDir: ${pvc.metadata.namespace}/${pvc.metadata.name}/${pv.metadata.name}
          mountPermissions: "0777"
        mountOptions:
          - nolock
          - noatime
          - nodiratime
          - rsize=262144
          - wsize=262144
  when:
    - PROVIDER == "gcp"
    - "'-export' in V4_CFG_RWX_FILESTORE_PATH"
  tags:
    - install
    - update

# Deploy csi-driver-nfs-sas Helm release with the prepared configuration
- name: Deploy csi-driver-nfs-sas
  kubernetes.core.helm:
    name: "{{ CSI_DRIVER_NFS_NAME }}"
    namespace: "{{ CSI_DRIVER_NFS_NAMESPACE }}"
    chart_repo_url: "{{ CSI_DRIVER_NFS_CHART_URL }}"
    chart_ref: "{{ CSI_DRIVER_NFS_CHART_NAME }}"
    chart_version: "{{ CSI_DRIVER_NFS_CHART_VERSION }}"
    values: "{{ CSI_DRIVER_NFS_CONFIG }}"
    kubeconfig: "{{ KUBECONFIG }}"
    create_namespace: true
    wait: true
  tags:
    - install
    - update

# Create csi-driver-nfs-pg-storage StorageClass for non-AWS/Azure providers
- name: Create csi-driver-nfs-pg-storage storageClass
  when:
    - PROVIDER != "aws"
    - PROVIDER != "azure"
  tags:
    - install
    - update
  block:
    # Define the StorageClass resource for pg-storage
    - name: Define csi-driver-nfs-pg-storage storageClass
      set_fact:
        storageclass_definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: pg-storage
          provisioner: nfs.csi.k8s.io
          parameters:
            server: "{{ V4_CFG_RWX_FILESTORE_ENDPOINT }}"
            share: "{{ V4_CFG_RWX_FILESTORE_PATH if '-export' in V4_CFG_RWX_FILESTORE_PATH else ('/pvs' if V4_CFG_RWX_FILESTORE_PATH != '/volumes' else '/volumes/pvs') }}"
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
          allowVolumeExpansion: true
          mountOptions:
            - "{{ 'nfsvers=4.1' if (V4_CFG_RWX_FILESTORE_PATH != '/volumes' and '-export' not in V4_CFG_RWX_FILESTORE_PATH) else 'nolock' }}"
            - noatime
            - nodiratime
            - rsize=262144
            - wsize=262144
    # Create the StorageClass resource
    - name: Create sc
      kubernetes.core.k8s:
        api_version: storage.k8s.io/v1
        kind: StorageClass
        state: present
        kubeconfig: "{{ KUBECONFIG }}"
        definition: "{{ storageclass_definition }}"

# Remove csi-driver-nfs-sas Helm release during uninstall
- name: Remove csi-driver-nfs-sas
  kubernetes.core.helm:
    name: "{{ CSI_DRIVER_NFS_NAME }}"
    namespace: "{{ CSI_DRIVER_NFS_NAMESPACE }}"
    kubeconfig: "{{ KUBECONFIG }}"
    wait: true
    state: absent
  tags:
    - uninstall

# Remove pg-storage StorageClass during uninstall for non-AWS/Azure providers
- name: Remove pg-storage storageClass
  when:
    - PROVIDER != "aws"
    - PROVIDER != "azure"
  tags:
    - uninstall
  block:
    # Redefine the StorageClass resource for pg-storage
    - name: Redefine csi-driver-nfs-pg-storage storageClass
      set_fact:
        storageclass_definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: pg-storage
          provisioner: nfs.csi.k8s.io
          parameters:
            server: "{{ V4_CFG_RWX_FILESTORE_ENDPOINT }}"
            share: /pvs
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
          allowVolumeExpansion: true
          mountOptions:
            - nfsvers=4.1
            - noatime
            - nodiratime
            - rsize=262144
            - wsize=262144
    # Remove the StorageClass resource
    - name: Remove storageClass
      kubernetes.core.k8s:
        api_version: storage.k8s.io/v1
        kind: StorageClass
        state: absent
        kubeconfig: "{{ KUBECONFIG }}"
        definition: "{{ storageclass_definition }}"
