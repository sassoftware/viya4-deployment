---
- set_fact:
    INGRESS_NGINX_CONFIG: "{{ INGRESS_NGINX_CONFIG |combine(private_ingress[PROVIDER], recursive=True)}}"
  when:
    - V4_CFG_INGRESS_MODE == "private"
    - PROVIDER in private_ingress
  tags:
    - install
    - update

- name: Set the default INGRESS_NGINX_CHART_VERSION if not specified
  block:
    - name: Retreive K8s cluster information
      community.kubernetes.k8s_cluster_info:
        kubeconfig: "{{ KUBECONFIG }}"
      register: cluster_info
    - name: Set the default INGRESS_NGINX_CHART_VERSION based on K8s server minor version
      set_fact:
        INGRESS_NGINX_CHART_VERSION: "{{ ingressVersions.k8sMinorVersionFloor.api.chartVersion
                                      if cluster_info.version.server.kubernetes.minor is version(ingressVersions.k8sMinorVersionFloor.value, 'ge')
                                      else ingressVersions.k8sMinorVersionCeiling.api.chartVersion }}"
    - name: Output INGRESS_NGINX_CHART_VERSION
      debug:
        msg: "{{ INGRESS_NGINX_CHART_VERSION }}"
  when:
    - INGRESS_NGINX_CHART_VERSION|length == 0
  tags:
    - install
    - update

- name: Deploy ingress-nginx
  community.kubernetes.helm:
    name: "{{ INGRESS_NGINX_NAME }}"
    namespace: "{{ INGRESS_NGINX_NAMESPACE }}"
    chart_repo_url: "{{ INGRESS_NGINX_CHART_URL }}"
    chart_ref: "{{ INGRESS_NGINX_CHART_NAME }}"
    chart_version: "{{ INGRESS_NGINX_CHART_VERSION }}"
    values: "{{ INGRESS_NGINX_CONFIG }}"
    kubeconfig: "{{ KUBECONFIG }}"
    create_namespace: true
    wait: true
  tags:
    - install
    - update

- name: Remove ingress-nginx
  community.kubernetes.helm:
    name: "{{ INGRESS_NGINX_NAME }}"
    namespace: "{{ INGRESS_NGINX_NAMESPACE }}"
    kubeconfig: "{{ KUBECONFIG }}"
    wait: true
    values: "{{ INGRESS_NGINX_CONFIG }}"
    state: absent
  tags:
    - uninstall

- name: Remove {{ INGRESS_NGINX_NAMESPACE }} namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ INGRESS_NGINX_NAMESPACE }}"
    wait: true
    wait_timeout: 600
    state: absent
    kubeconfig: "{{ KUBECONFIG }}"
  tags:
    - uninstall
