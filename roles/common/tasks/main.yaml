- name: Load config file
  include_vars:
    file: "{{ CONFIG }}"
  when: CONFIG is defined
  tags:
    - install
    - uninstall
    - upgrade

- name: Set BASE_DIR default path
  set_fact:
    BASE_DIR="{{ ansible_env.HOME }}"
  when: BASE_DIR is not defined
  tags:
    - install
    - uninstall
    - upgrade

- block:
    - name: Parse tfstate
      set_fact: 
        tfstate: "{{ lookup('tfstate', TFSTATE) }}"
    - name: Add nat ip to LOADBALANCER_SOURCE_RANGES
      set_fact:
        LOADBALANCER_SOURCE_RANGES: "{{ LOADBALANCER_SOURCE_RANGES + [tfstate.nat_ip.value+'/32'] }}"
      when: 
        - tfstate.nat_ip is defined
        - tfstate.nat_ip.value|length > 0
        - LOADBALANCER_SOURCE_RANGES is defined
        - (tfstate.nat_ip.value+'/32') not in LOADBALANCER_SOURCE_RANGES
    - name: tfstate - nfs endpoint
      set_fact:
        V4_CFG_RWX_FILESTORE_ENDPOINT: "{{ tfstate.rwx_filestore_endpoint.value }}"
      when: 
        - tfstate.rwx_filestore_endpoint is defined
        - tfstate.rwx_filestore_endpoint.value|length > 0
    - name: tfstate - nfs path
      set_fact:
        V4_CFG_RWX_FILESTORE_PATH: "{{ tfstate.rwx_filestore_path.value }}"
      when: 
        - tfstate.rwx_filestore_path is defined
        - tfstate.rwx_filestore_path.value|length > 0
    - name: tfstate - filestore id
      set_fact:
        V4_CFG_RWX_FILESTORE_ID: "{{ tfstate.rwx_filestore_id.value }}"
      when: 
        - tfstate.rwx_filestore_id is defined
        - tfstate.rwx_filestore_id.value|length > 0
    - name: tfstate - filestore location
      set_fact:
        V4_CFG_RWX_FILESTORE_LOCATION: "{{ tfstate.location.value }}"
      when: 
        - tfstate.location is defined
        - tfstate.location.value|length > 0
    - name: tfstate - export kubeconfig
      copy:
        dest: "{{ tmpdir.path }}/.kube"
        content: |
          {{ tfstate.kube_config.value }}
        mode: "0600"
      when:
        - tfstate.kube_config is defined
        - tfstate.kube_config.value|length > 0
    - name: tfstate - kubeconfig var
      set_fact:
        KUBECONFIG: "{{ tmpdir.path }}/.kube"
      when:
        - tfstate.kube_config is defined
        - tfstate.kube_config.value|length > 0
    - name: tfstate - provider
      set_fact: 
        PROVIDER: "{{ tfstate.provider.value }}"
      when:
        - tfstate.provider is defined
        - tfstate.provider.value|length > 0
    - name: tfstate - cluster name
      set_fact: 
        CLUSTER_NAME: "{{ tfstate.cluster_name.value }}"
      when:
        - tfstate.cluster_name is defined
        - tfstate.cluster_name.value|length > 0
    - name: tfstate - postgres admin
      set_fact:
        V4_CFG_POSTGRES_ADMIN_LOGIN: "{{ tfstate.postgres_admin.value }}"
      when:
        - V4_CFG_POSTGRES_TYPE is defined
        - V4_CFG_POSTGRES_TYPE == "external"
        - tfstate.postgres_admin is defined
        - tfstate.postgres_server_name is defined
    - name: tfstate - postgres port
      set_fact:
        V4_CFG_POSTGRES_PORT: "{{ tfstate.postgres_server_port.value }}"
      when:
        - V4_CFG_POSTGRES_TYPE is defined
        - V4_CFG_POSTGRES_TYPE == "external"
        - tfstate.postgres_server_port is defined
    - name: tfstate - postgres password
      set_fact:
        V4_CFG_POSTGRES_PASSWORD: "{{ tfstate.postgres_password.value }}"
      when:
        - V4_CFG_POSTGRES_TYPE is defined
        - V4_CFG_POSTGRES_TYPE == "external"
        - tfstate.postgres_password is defined
    - name: tfstate - postgres fqdn
      set_fact:
        V4_CFG_POSTGRES_FQDN: "{{ tfstate.postgres_fqdn.value }}"
      when:
        - V4_CFG_POSTGRES_TYPE is defined
        - V4_CFG_POSTGRES_TYPE == "external"
        - tfstate.postgres_fqdn is defined
    - name: tfstate - jump server
      set_fact:
        JUMP_SVR_HOST: "{{ tfstate.jump_public_ip.value }}"
      when:
        - tfstate.jump_public_ip is defined
        - tfstate.jump_public_ip.value|length > 0
    - name: tfstate - jump user
      set_fact:
        JUMP_SVR_USER: "{{ tfstate.jump_admin_username.value }}"
      when:
        - tfstate.jump_admin_username is defined
        - tfstate.jump_admin_username.value|length > 0
    - name: tfstate - ssh private key
      copy:
        content: "{{ tfstate.ssh_private_key.value }}"
        dest: "{{ tmpdir.path }}/.ssh"
        mode: "0600"
      when:
        - tfstate.ssh_private_key is defined
        - tfstate.ssh_private_key.value|length > 0
    - name: tfstate - jump private key var
      set_fact:
        JUMP_SVR_PRIVATE_KEY: "{{ tmpdir.path }}/.ssh"
      when:
        - tfstate.ssh_private_key is defined
        - tfstate.ssh_private_key.value|length > 0
    - set_fact:
        tfstate: ""
  when:
    - TFSTATE is defined
  tags:
    - install
    - uninstall
    - upgrade

- name: Set DEPLOY_DIR
  set_fact:
    DEPLOY_DIR="{{ BASE_DIR }}/{{ CLUSTER_NAME }}/{{ NAMESPACE }}"
  when: DEPLOY_DIR is not defined
  tags:
    - install
    - uninstall
    - upgrade
