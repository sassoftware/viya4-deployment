---
# Update Resources in Kustomization.yaml
- name: check if cas resources present
  lineinfile:
    path: "{{ DEPLOY_DIR }}/kustomization.yaml"
    line: "  - site-config/cas-{{ item | trim }}-default"
    state: present
  check_mode: yes
  register: out
  with_items: "{{ V4MT_TENANT_IDS.split(',') }}"
  tags:
    - cas-onboard

- name: add cas resources
  lineinfile:
    path: "{{ DEPLOY_DIR }}/kustomization.yaml"
    insertafter: "resources:" 
    line: "  - site-config/cas-{{ item | trim }}-default"
    state: present
  with_items: "{{ V4MT_TENANT_IDS.split(',') }}"
  when: out.changed
  tags:
    - cas-onboard

# Remove all the tenant cas resources
- name: remove cas resources
  lineinfile:
    path: "{{ DEPLOY_DIR }}/kustomization.yaml"
    regexp: '.*site-config/cas-{{ item | trim }}-default.*$'
    state: absent
  with_items: "{{ V4MT_TENANT_IDS.split(',') }}"
  tags:
    - offboard

# Offboard CAS servers
- name: kubectl delete cas servers for tenants
  ansible.builtin.shell: |
    echo {{ item }}
    kubectl --kubeconfig {{ KUBECONFIG }} -n {{ NAMESPACE }} delete casdeployment -l sas.com/tenant={{ item | trim }}
  with_items: '{{ V4MT_TENANT_IDS.split(",") | replace(" ", "") }}'
  tags:
    - offboard

# After offboard cas servers delete the cas tenant directories
- name: delete cas tenant directory
  file:
    state: absent
    path: "{{ DEPLOY_DIR }}/site-config/cas-{{ item | trim }}-default"
  with_items: '{{ V4MT_TENANT_IDS.split(",") | replace(" ", "") }}'
  when: 
    - V4MT_ENABLE
  tags:
    - offboard

# Delete the SASDeployment.yaml file
- name: delete SASDeployment.yaml
  file:
    state: absent
    path: "{{ DEPLOY_DIR }}/SASDeployment.yaml"
  tags:
    - cas-onboard
    - offboard


# TODO REMOVE AFTER TESTING ############################################################################################

# Generate new site.yaml
#- name: kustomize - generate new manifest
#  ansible.builtin.shell: |
#    kustomize build {{ DEPLOY_DIR }} -o {{ DEPLOY_DIR }}/site.yaml
#  tags:
#    - cas-onboard
#    - offboard
#
## Re-deploy after enabling cas servers
#- name: prereqs - cluster-api
#  ansible.builtin.shell: |
#    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-api" --server-side --force-conflicts -f {{ DEPLOY_DIR }}/site.yaml
#    kubectl --kubeconfig {{ KUBECONFIG }} wait --for condition=established --timeout=60s -l "sas.com/admin=cluster-api" crd
#  register: result
#  failed_when:
#    - result["stderr"]|length > 0
#    - '"no matches for kind" not in result.stderr'
#    - '"in version" not in result.stderr'
#    - '"Warning" not in result.stderr'
#    - '"no matching resources found" not in result.stderr'
#    - '"error: no objects passed to apply" not in result.stderr'
#  tags:
#    - cas-onboard
#
#- name: prereqs - cluster-wide
#  ansible.builtin.shell: |
#    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-wide" -f {{ DEPLOY_DIR }}/site.yaml
#    kubectl --kubeconfig {{ KUBECONFIG }} wait --for condition=established --timeout=60s -l "sas.com/admin=cluster-wide" crd
#  register: result
#  failed_when:
#    - result["stderr"]|length > 0
#    - '"no matches for kind" not in result.stderr'
#    - '"in version" not in result.stderr'
#    - '"Warning" not in result.stderr'
#    - '"no matching resources found" not in result.stderr'
#    - '"error: no objects passed to apply" not in result.stderr'
#  tags:
#    - cas-onboard
#
#- name: prereqs - cluster-local deploy
#  ansible.builtin.command: |
#    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=cluster-local" -f {{ DEPLOY_DIR }}/site.yaml --prune
#  register: result
#  failed_when:
#    - result["stderr"]|length > 0
#    - '"no matches for kind" not in result.stderr'
#    - '"in version" not in result.stderr'
#    - '"Warning" not in result.stderr'
#  tags:
#    - cas-onboard
#
#- name: manifest - deploy
#  ansible.builtin.command: |
#    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} --selector="sas.com/admin=namespace" -f {{ DEPLOY_DIR }}/site.yaml --prune
#  register: result
#  failed_when:
#    - result["stderr"]|length > 0
#    - '"no matches for kind" not in result.stderr'
#    - '"in version" not in result.stderr'
#    - '"Warning" not in result.stderr'
#  tags:
#    - cas-onboard

########################################################################################################################