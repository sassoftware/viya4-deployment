# Copyright Â© 2020-2024, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
# Apply the service account role
- name: Apply service account role
  ansible.builtin.shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} apply -n {{ NAMESPACE }} -f {{ DEPLOY_DIR }}/site-config/sas-tenant-job/tenant-job-service-account-role.yaml
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - '"no matches for kind" not in result.stderr'
    - '"in version" not in result.stderr'
    - '"Warning" not in result.stderr'
    - '"no matching resources found" not in result.stderr'
    - '"error: no objects passed to apply" not in result.stderr'
  tags:
    - onboard
    - offboard

# create the kustomization.yaml for onboard
- name: Copy - kustomization-onboard yaml
  copy:
    src: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/kustomization-onboard.yaml"
    dest: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/kustomization.yaml"
  tags:
    - onboard

# create the kustomization.yaml for offboard
- name: Copy - kustomization-offboard yaml
  copy:
    src: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/kustomization-offboard.yaml"
    dest: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/kustomization.yaml"
  tags:
    - offboard

# Update kustomization files if TLS disabled
- name: TLS disabled - onboard
  replace:
    path: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/kustomization.yaml"
    regexp: "- tenant-onboard-job-tls-transformer.yaml"
    replace: "# - tenant-onboard-job-tls-transformer.yaml"
  when: V4_CFG_TLS_MODE == "disabled"
  tags:
    - onboard

- name: TLS disabled - offboard
  replace:
    path: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/kustomization.yaml"
    regexp: "- tenant-offboard-job-tls-transformer.yaml"
    replace: "# - tenant-offboard-job-tls-transformer.yaml"
  when: V4_CFG_TLS_MODE == "disabled"
  tags:
    - offboard

- name: Kustomize - get load restrictor flag
  set_fact:
    LOAD_RESTRICTOR_FLAG: "{{ '--load-restrictor LoadRestrictionsNone' if V4_CFG_CADENCE_VERSION is version('2023.02', '>=') or V4_CFG_CADENCE_NAME | lower == 'fast'
      else '--load_restrictor=none' }}"
  tags:
    - onboard
    - offboard

- name: Kustomize - generate onboard manifest
  tags:
    - onboard
  block:
    - name: Kustomize - generate onboard manifest - Ansible
      ansible.builtin.shell: >
        docker run --rm
        --user="{{ UID_GID }}"
        --name "orchestration_{{ lookup('password', '/dev/null chars=ascii_lowercase length=8') }}"
        --volume "{{ DEPLOY_DIR }}:/data"
        --entrypoint kustomize
        "{{ V4_CFG_CR_HOST }}/{{ ORCHESTRATION_IMAGE }}"
        build /data/site-config/sas-tenant-job/ {{ LOAD_RESTRICTOR_FLAG }} -o /data/site-config/sas-tenant-job/site-onboard.yaml
      when:
        - deployment_tooling == "ansible"
    - name: Kustomize - generate onboard manifest - Docker
      environment:
        PATH: "{{ ORCHESTRATION_TOOLING_PATH }}"
      command:
        cmd: |
          kustomize build {{ DEPLOY_DIR }}/site-config/sas-tenant-job/ {{ LOAD_RESTRICTOR_FLAG }} -o {{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-onboard.yaml
      args:
        chdir: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}"
      when:
        - deployment_tooling == "docker"

- name: Kustomize - generate offboard manifest
  tags:
    - offboard
  block:
    - name: Kustomize - generate offboard manifest - Ansible
      ansible.builtin.shell: >
        docker run --rm
        --user="{{ UID_GID }}"
        --name "orchestration_{{ lookup('password', '/dev/null chars=ascii_lowercase length=8') }}"
        --volume "{{ DEPLOY_DIR }}:/data"
        --entrypoint kustomize
        "{{ V4_CFG_CR_HOST }}/{{ ORCHESTRATION_IMAGE }}"
        build /data/site-config/sas-tenant-job/ {{ LOAD_RESTRICTOR_FLAG }} -o /data/site-config/sas-tenant-job/site-offboard.yaml
      when:
        - deployment_tooling == "ansible"
    - name: Kustomize - generate offboard manifest - Docker
      environment:
        PATH: "{{ ORCHESTRATION_TOOLING_PATH }}"
      command:
        cmd: |
          kustomize build {{ DEPLOY_DIR }}/site-config/sas-tenant-job/ {{ LOAD_RESTRICTOR_FLAG }} -o {{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-offboard.yaml
      args:
        chdir: "{{ ORCHESTRATION_TOOLING_DIRECTORY }}"
      when:
        - deployment_tooling == "docker"

# Get the full name of the sas-image-pull-secrets in current deployment
- name: Get - sas-image-pull-secrets
  ansible.builtin.shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} get secrets -n {{ NAMESPACE }} | grep sas-image-pull-secrets | awk '{print $1}'
  register: secret_name
  tags:
    - onboard
    - offboard

- name: Update onboard manifest
  replace:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { path: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-onboard.yaml", regexp: sas-image-pull-secrets.*$, replace: "{{ secret_name.stdout }}" }
    - { path: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-onboard.yaml", regexp: cr.sas.com, replace: "{{ V4_CFG_CR_HOST }}" }
  tags:
    - onboard

- name: Update offboard manifest
  replace:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { path: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-offboard.yaml", regexp: sas-image-pull-secrets.*$, replace: "{{ secret_name.stdout }}" }
    - { path: "{{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-offboard.yaml", regexp: cr.sas.com, replace: "{{ V4_CFG_CR_HOST }}" }
  tags:
    - offboard

# Run Onboard job
- name: Run onboarding command
  ansible.builtin.shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} create -n {{ NAMESPACE }} -f {{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-onboard.yaml
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - '"no matches for kind" not in result.stderr'
    - '"Warning" not in result.stderr'
    - '"no matching resources found" not in result.stderr'
  tags:
    - onboard

# Run Offboard job
- name: Run offboarding command
  ansible.builtin.shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} create -n {{ NAMESPACE }} -f {{ DEPLOY_DIR }}/site-config/sas-tenant-job/site-offboard.yaml
  register: result
  failed_when:
    - result["stderr"]|length > 0
    - '"no matches for kind" not in result.stderr'
    - '"Warning" not in result.stderr'
    - '"no matching resources found" not in result.stderr'
  tags:
    - offboard

- name: Initialize pod failure list
  set_fact:
    pod_fail_list: ["Error", "Init:Error", "CrashLoopBackOff", "Failed", "Unknown"]
  tags:
    - onboard
    - offboard

# Wait for the tenant-onboard pod to be in Completed state
- name: Get sas-tenant-onboard job status
  ansible.builtin.shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} get pods -n {{ NAMESPACE }} --sort-by=.metadata.creationTimestamp | tac | grep sas-tenant-onboard | awk '{print $3}'
  register: pod_status
  until: pod_status.stdout_lines[0] == "Completed" or pod_status.stdout_lines[0] in pod_fail_list
  retries: "{{ V4MT_ONBOARD_RETRY | int }}"
  delay: "{{ V4MT_ONBOARD_DELAY | int }}"
  tags:
    - onboard

# Wait for the tenant-offboard pod to be in Completed state
- name: Get sas-tenant-offboard job status
  ansible.builtin.shell: |
    kubectl --kubeconfig {{ KUBECONFIG }} get pods -n {{ NAMESPACE }} --sort-by=.metadata.creationTimestamp | tac | grep sas-tenant-offboard | awk '{print $3}'
  register: pod_status
  until: pod_status.stdout_lines[0] == "Completed" or pod_status.stdout_lines[0] in pod_fail_list
  retries: "{{ V4MT_OFFBOARD_RETRY | int }}"
  delay: "{{ V4MT_OFFBOARD_DELAY | int }}"
  tags:
    - offboard

- name: Check for pods failing status
  ansible.builtin.fail:
    msg: '{{ ansible_run_tags | select("match", "[on|off].*") | list | first }} job failed with status {{ pod_status.stdout_lines[0] }}. Please check pod log for
      more details.'
  when: pod_status.stdout_lines[0] in pod_fail_list
  tags:
    - onboard
    - offboard
